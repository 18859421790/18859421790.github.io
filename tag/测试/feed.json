{
    "version": "https://jsonfeed.org/version/1",
    "title": "xu·live • All posts by \"测试\" tag",
    "description": "永远热泪盈眶",
    "home_page_url": "https://18859421790.github.io",
    "items": [
        {
            "id": "https://18859421790.github.io/2023/10/09/2023.10.9/",
            "url": "https://18859421790.github.io/2023/10/09/2023.10.9/",
            "title": "项目测试",
            "date_published": "2023-10-08T16:00:00.000Z",
            "content_html": "<h2 id=\"1-官网jest\"><a class=\"markdownIt-Anchor\" href=\"#1-官网jest\">#</a> 1. 官网 jest</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qZXN0anMuaW8vZG9jcy9lbi9tb2NrLWZ1bmN0aW9ucw==\">Mock Functions · Jest</span></p>\n<h3 id=\"11-相关文档\"><a class=\"markdownIt-Anchor\" href=\"#11-相关文档\">#</a> 1.1 相关文档</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2VjaGl6ZW4uZ2l0aHViLmlvL3RlY2gvMjAxNy8wMi0xMi1qZXN0LWVuenltZS1tZXRob2Q=\">使用 jest+enzyme 进行 react 项目测试 - 测试手法篇</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC82ODQ0OTAzNzYzNTI2ODI4MDQ1I2hlYWRpbmctMQ==\">Jest &amp; enzyme 进行 react 单元测试</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC82ODQ0OTAzOTM4MDAxNDY5NDQ4I2hlYWRpbmctMg==\">使用 enzyme + jest 测试 React 组件</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL2F2NzExODA3OTg0P3A9MQ==\"></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL2F2NzExODA3OTg0P3A9MQ==\"></span></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;test&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> container = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ItremList</span> <span class=\"attr\">items</span>=<span class=\"string\">&#123;[]&#125;</span> /&gt;</span></span>, container);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(container.<span class=\"property\">textContent</span>).<span class=\"title function_\">toMatch</span>(<span class=\"string\">&#x27;no item&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-基础断言类型匹配\"><a class=\"markdownIt-Anchor\" href=\"#2-基础断言类型匹配\">#</a> 2. 基础断言类型匹配</h2>\n<blockquote>\n<p>toBe()    ===</p>\n</blockquote>\n<p>匹配器，是在工作中最常用的一种匹配器，简单的理解它就是相等。这个相当是等同于 === 的，也就是我们常说的严格相等。</p>\n<blockquote>\n<p>toEqual()   ==</p>\n</blockquote>\n<p>那你说我想让上面的测试结果是正确的，这时候我需要使用什么匹配器那？那就是使用 toEqual () 匹配器。可以把它理解成只要内容相等，就可以通过测试，比如修改代码如下: &lt;👿&gt; 所以说当你不严格匹配但要求值相等时时就可以使用 toEqual（）匹配器。</p>\n<blockquote>\n<p>toBeNull()</p>\n</blockquote>\n<p>匹配器只匹配 null 值，需要注意的是不匹配 undefined 的值。我们复制上面的代码，然后把代码修改成如下形式：</p>\n<blockquote>\n<p>toBeUndifined()</p>\n</blockquote>\n<p>那我们要匹配 undefined 时，就可以使用 toBeUndifined () 匹配器，比如写成如下代码。</p>\n<blockquote>\n<p>toBeDefined()</p>\n</blockquote>\n<p>匹配器的意思是只要定义过了，都可以匹配成功，例如下面的代码：</p>\n<blockquote>\n<p>toBeTruthy()</p>\n</blockquote>\n<p>这个是 <code>true</code>  和 <code>false</code>  匹配器，就相当于判断真假的。比如说写下面这样一段代码:</p>\n<blockquote>\n<p>toBeFalsy()</p>\n</blockquote>\n<p>有真就有假，跟 toBeTruthy () 对应的就是 toBeFalsy, 这个匹配器只要是返回的 false 就可以通过测试。</p>\n<h2 id=\"如何判定输出包括的内容\"><a class=\"markdownIt-Anchor\" href=\"#如何判定输出包括的内容\">#</a> 如何判定输出包括的内容</h2>\n<h2 id=\"tocontainitem\"><a class=\"markdownIt-Anchor\" href=\"#tocontainitem\">#</a> <strong> <code>toContain(item)</code> </strong></h2>\n<p>Use  <code>.toContain</code>  when you want to check that an item is in an array. For testing the items in the array, this uses  <code>===</code> , a strict equality check.  <code>.toContain</code>  can also check whether a string is a substring of another string.</p>\n<p>使用。当你想检查一个项目是否在一个数组中时。对于测试数组中的项，这使用 = = = ，一个严格的相等性检查。.toContain 还可以检查一个字符串是否是另一个字符串的子字符串。</p>\n<h2 id=\"钩子函数\"><a class=\"markdownIt-Anchor\" href=\"#钩子函数\">#</a> 钩子函数</h2>\n<blockquote>\n<p>beforeAll()</p>\n</blockquote>\n<p>钩子函数的意思是在所有测试用例之前进行执行。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">afterAll</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;在所有测试用例之前进行执行&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>afterAll()</p>\n</blockquote>\n<p>钩子函数是在完成所有测试用例之后才执行的函数。</p>\n<blockquote>\n<p>beforeEach()</p>\n</blockquote>\n<p>钩子函数，是在每个测试用例前都会执行一次的钩子函数</p>\n<blockquote>\n<p>afterEach()</p>\n</blockquote>\n<p>钩子函数，是在每次测试用例完成测试之后执行一次的钩子函数，比如下面的代码。</p>\n<h2 id=\"length\"><a class=\"markdownIt-Anchor\" href=\"#length\">#</a> .length</h2>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; shallow &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;enzyme&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> toDoList = <span class=\"title function_\">shallow</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ToDoList</span> <span class=\"attr\">tasks</span>=<span class=\"string\">&#123;tasks&#125;</span> /&gt;</span></span>); </span><br><span class=\"line\"><span class=\"title function_\">expect</span>(toDoList.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;li&#x27;</span>).<span class=\"property\">length</span>).<span class=\"title function_\">toEqual</span>(tasks.<span class=\"property\">length</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"测试react组件我们采用enzyme工具库它提供3种组件渲染方式\"><a class=\"markdownIt-Anchor\" href=\"#测试react组件我们采用enzyme工具库它提供3种组件渲染方式\">#</a> 测试 React 组件我们采用 <code>Enzyme</code>  工具库，它提供 3 种组件渲染方式：</h1>\n<ol>\n<li><code>Shallow</code> ：不会渲染子组件</li>\n<li><code>Mount</code> : 渲染子组件，同时包含生命周期函数如 <code>componentDidMount</code></li>\n<li><code>Render</code> : 渲染子组件，但不会包含生命周期，同时可用的 API 也会减少比如 <code>setState()</code></li>\n</ol>\n<h1 id=\"应该正确的呈现渲染\"><a class=\"markdownIt-Anchor\" href=\"#应该正确的呈现渲染\">#</a> 应该正确的呈现（渲染）</h1>\n<h3 id=\"render\"><a class=\"markdownIt-Anchor\" href=\"#render\">#</a> render</h3>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">**<span class=\"title function_\">it</span>(<span class=\"string\">&#x27;should render correctly&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123; </span><br><span class=\"line\">\t<span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">render</span>(</span><br><span class=\"line\">\t\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Radio</span> *<span class=\"attr\">className</span>*=<span class=\"string\">&quot;customized&quot;</span>&gt;</span>Test<span class=\"tag\">&lt;/<span class=\"name\">Radio</span>&gt;</span></span></span><br><span class=\"line\">\t);</span><br><span class=\"line\">  <span class=\"title function_\">expect</span>(wrapper).<span class=\"title function_\">toMatchSnapshot</span>(); </span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 二  引入import</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> toJson <span class=\"keyword\">from</span> <span class=\"string\">&#x27;enzyme-to-json&#x27;</span>;</span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;should render correctly&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">render</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">BorderTitleView</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(<span class=\"title function_\">toJson</span>(wrapper)).<span class=\"title function_\">toMatchSnapshot</span>();</span><br><span class=\"line\">  &#125;);**</span><br></pre></td></tr></table></figure>\n<h3 id=\"mount\"><a class=\"markdownIt-Anchor\" href=\"#mount\">#</a> mount</h3>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**<span class=\"title function_\">it</span>(<span class=\"string\">&#x27;mount correctly&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123; </span><br><span class=\"line\">\t<span class=\"title function_\">expect</span>(<span class=\"function\">() =&gt;</span> <span class=\"title function_\">mount</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Button</span>&gt;</span>Follow<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span>)).<span class=\"property\">not</span>.<span class=\"title function_\">toThrow</span>(); </span><br><span class=\"line\">&#125;);**</span><br></pre></td></tr></table></figure>\n<h1 id=\"state-改变值测试\"><a class=\"markdownIt-Anchor\" href=\"#state-改变值测试\">#</a> State 改变值测试、</h1>\n<h3 id=\"点击完成ui显示的会变化\"><a class=\"markdownIt-Anchor\" href=\"#点击完成ui显示的会变化\">#</a> 点击完成 UI 显示的会变化</h3>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">test</span>(<span class=\"string\">&#x27;Change value of name&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 先確認 input 的 value 屬性</span></span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(counter.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;div&#x27;</span>).<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">props</span>().<span class=\"property\">value</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;無名氏&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\">// setState</span></span><br><span class=\"line\">    counter.<span class=\"title function_\">setState</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;神Ｑ超人&#x27;</span> &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 確認 sate 及 span 中的文字是否改變</span></span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(counter.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;div&#x27;</span>).<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">props</span>().<span class=\"property\">value</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;神Ｑ超人&#x27;</span>)</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(counter.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;div&#x27;</span>).<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;span&#x27;</span>).<span class=\"title function_\">text</span>()).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;神Ｑ超人點了 1 下&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> keyInput = enzymeWrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">keyInput.<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;change&#x27;</span>, &#123; <span class=\"attr\">target</span>: &#123; <span class=\"attr\">value</span>: <span class=\"string\">&#x27;RoleKey&#x27;</span> &#125; &#125;)</span><br></pre></td></tr></table></figure>\n<h1 id=\"ui交互测试\"><a class=\"markdownIt-Anchor\" href=\"#ui交互测试\">#</a> UI 交互测试</h1>\n<h3 id=\"snapshot\"><a class=\"markdownIt-Anchor\" href=\"#snapshot\">#</a> snapshot</h3>\n<p>snapshot 快照测试第一次运行的时候会将 React 组件在不同情况下的渲染结果保存一份快照文件。后面每次运行快照测试的时候，都会和第一次比较，想要生成新的快照文件添加  <code>u</code>  参数生成新的快照文件。快照文件是以  <code>.snap</code>  结尾的文件，会在运行测试的时候存放在  <code>__snapshots__</code>  文件夹下。</p>\n<h2 id=\"测试点击事件\"><a class=\"markdownIt-Anchor\" href=\"#测试点击事件\">#</a> 测试点击事件</h2>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">describe</span>(<span class=\"string\">&#x27;点击事件&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">it</span>(<span class=\"string\">&#x27;多次点击事件记录&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> num = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span>&gt;</span>点击<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;button&#x27;</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">    num.<span class=\"title function_\">push</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;button&#x27;</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">    num.<span class=\"title function_\">push</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> numleng = <span class=\"title function_\">expect</span>(num.<span class=\"property\">length</span>).<span class=\"title function_\">toBe</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">describe</span>(<span class=\"string\">&#x27;点击事件&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">it</span>(<span class=\"string\">&#x27;按钮 onClick 事件&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> state = <span class=\"string\">&#x27;default&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">handleClick</span> = res =&gt; &#123;</span><br><span class=\"line\">      state = res;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">SettingRoundRadioButtonGroupView</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">data</span>=<span class=\"string\">&#123;[</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            &#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">              <span class=\"attr\">language:</span> &#x27;<span class=\"attr\">中文</span>&#x27;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">              <span class=\"attr\">country:</span> &#x27;<span class=\"attr\">简体中文</span>(<span class=\"attr\">中国</span>)&#x27;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">              <span class=\"attr\">icon:</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                &#x27;<span class=\"attr\">https:</span>//<span class=\"attr\">discordapp.com</span>/<span class=\"attr\">assets</span>/<span class=\"attr\">b2da62f020089ccee92860e4defafdb4.png</span>&#x27;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            &#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">              <span class=\"attr\">language:</span> &#x27;<span class=\"attr\">日本語</span>&#x27;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">              <span class=\"attr\">country:</span> &#x27;<span class=\"attr\">日语</span>&#x27;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">              <span class=\"attr\">icon:</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                &#x27;<span class=\"attr\">https:</span>//<span class=\"attr\">discordapp.com</span>/<span class=\"attr\">assets</span>/<span class=\"attr\">f23c5c28c4429691f7c54af93876d661.png</span>&#x27;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          ]&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;res</span> =&gt;</span> handleClick(res)&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;Styled(div)&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">1</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(state.<span class=\"property\">language</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;中文&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;弹窗中 onClose 按钮&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> state = <span class=\"string\">&#x27;default&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">onClose</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">      state = <span class=\"string\">&#x27;onClose&#x27;</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">ConfirmDialog</span> <span class=\"attr\">onClose</span>=<span class=\"string\">&#123;onClose&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;PrimaryButton&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">0</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(state).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;onClose&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"onchange\"><a class=\"markdownIt-Anchor\" href=\"#onchange\">#</a> onChange</h2>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">test</span>(<span class=\"string\">&#x27;pass a selected value to the onChange handler&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> value = <span class=\"string\">&#x27;2&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> onChange = jest.<span class=\"title function_\">fn</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">shallow</span>(</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Select</span> <span class=\"attr\">items</span>=<span class=\"string\">&#123;ITEMS&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;onChange&#125;</span> /&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(wrapper).<span class=\"title function_\">toMatchSnapshot</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;select&#x27;</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;change&#x27;</span>, &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: &#123; value &#125;,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(onChange).<span class=\"title function_\">toBeCalledWith</span>(value);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"dom-中元素匹配\"><a class=\"markdownIt-Anchor\" href=\"#dom-中元素匹配\">#</a> Dom  中元素匹配</h1>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//wrapper.text()</span></span><br><span class=\"line\">  <span class=\"title function_\">it</span>(<span class=\"string\">&#x27;should not insert space to link or text button&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(wrapper.<span class=\"title function_\">text</span>()).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;123&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<p>获取 Dom 中的值</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//组件带引号</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;ForwardRef(Backdrop)&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">0</span>).<span class=\"title function_\">props</span>().<span class=\"property\">open</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//组件不带引号也可以</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(wrapper.<span class=\"title function_\">find</span>(<span class=\"title class_\">SettingContainer</span>).<span class=\"title function_\">text</span>());</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">EmojiIcon</span> size=&#123;<span class=\"number\">100</span>&#125; symbol=<span class=\"string\">&quot;🍉&quot;</span> onClick=&#123;[<span class=\"title class_\">Function</span>: onClick]&#125;&gt;</span><br><span class=\"line\">          <span class=\"language-xml\">&lt;Styled(span) className=&quot;makeStyles-root-10 makeStyles-root-11&quot; role=&quot;img&quot; aria-label=&quot;&quot; aria-hidden=&quot;true&quot; onClick=&#123;[Function: onClick]&#125;&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;span-root-12 makeStyles-root-10 makeStyles-root-11&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;img&quot;</span> <span class=\"attr\">aria-label</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">aria-hidden</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;[Function:</span> <span class=\"attr\">onClick</span>]&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">              🍉</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          &lt;/Styled(span)&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">EmojiIcon</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(wrapper.<span class=\"title function_\">find</span>(<span class=\"title class_\">EmojiIcon</span>).<span class=\"title function_\">props</span>().<span class=\"property\">size</span>); <span class=\"comment\">// 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//相同Dom结构时候取数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;should warning correctly&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;default&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;warning&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(wrapper.<span class=\"title function_\">find</span>(<span class=\"title class_\">Input</span>).<span class=\"title function_\">at</span>(<span class=\"number\">0</span>).<span class=\"title function_\">props</span>().<span class=\"property\">type</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;default&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(wrapper.<span class=\"title function_\">find</span>(<span class=\"title class_\">Input</span>).<span class=\"title function_\">at</span>(<span class=\"number\">1</span>).<span class=\"title function_\">props</span>().<span class=\"property\">type</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;warning&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"tojson\"><a class=\"markdownIt-Anchor\" href=\"#tojson\">#</a> toJson</h2>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mount &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;enzyme&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> toJson <span class=\"keyword\">from</span> <span class=\"string\">&#x27;enzyme-to-json&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">describe</span>(<span class=\"string\">&#x27;Input correctly &#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">it</span>(<span class=\"string\">&#x27;should render correctly&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">render</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Input</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(<span class=\"title function_\">toJson</span>(wrapper)).<span class=\"title function_\">toMatchSnapshot</span>();</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"onclick事件\"><a class=\"markdownIt-Anchor\" href=\"#onclick事件\">#</a> onClick 事件</h2>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;选中按钮 onClick 事件&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> onClickItem = jest.<span class=\"title function_\">fn</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">SettingDirectory</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">select</span>=<span class=\"string\">&#123;</span>&#x27;/<span class=\"attr\">setting</span>/<span class=\"attr\">usersettingsaccount</span>&#x27;&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">data</span>=<span class=\"string\">&#123;data&#125;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;onClickItem&#125;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;DirectoryButton&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">0</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(onClickItem).<span class=\"title function_\">toHaveBeenCalled</span>();</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(onClickItem).<span class=\"title function_\">toHaveBeenCalledTimes</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;DirectoryButton&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">0</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(onClickItem).<span class=\"title function_\">toHaveBeenCalled</span>();</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(onClickItem).<span class=\"title function_\">toHaveBeenCalledTimes</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">    jest.<span class=\"title function_\">clearAllMocks</span>();</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;onChange get value&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> eventObject;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> eventObjectValue;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">onChange</span> = e =&gt; &#123;</span><br><span class=\"line\">      eventObject = e;</span><br><span class=\"line\">      eventObjectValue = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">SettingInput</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;value测试数据&quot;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;onChange&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;SettingInput&#x27;</span>).<span class=\"title function_\">props</span>().<span class=\"property\">value</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;value测试数据&#x27;</span>);</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;change&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(eventObject.<span class=\"property\">type</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;change&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(eventObjectValue).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;value测试数据&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;</span><br><span class=\"line\">  mountTest,</span><br><span class=\"line\">  renderTest,</span><br><span class=\"line\">&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../../../../../../tests/common/mountTest&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">describe</span>(<span class=\"string\">&#x27;DirectoryButton Correctly &#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">mountTest</span>(<span class=\"function\">() =&gt;</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">DirectoryButton</span> /&gt;</span></span>);</span><br><span class=\"line\">  <span class=\"title function_\">renderTest</span>(<span class=\"function\">() =&gt;</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">DirectoryButton</span> /&gt;</span></span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> interface notFindTextType &#123;</span><br><span class=\"line\">  <span class=\"attr\">title</span>: string;</span><br><span class=\"line\">  <span class=\"attr\">des</span>: string;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[];</span><br></pre></td></tr></table></figure>\n<h2 id=\"前后dom变化对比\"><a class=\"markdownIt-Anchor\" href=\"#前后dom变化对比\">#</a> 前后 DOM 变化对比</h2>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> enterBefore = wrapper.<span class=\"title function_\">html</span>();</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"title class_\">Tree</span>).<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;.div-root-371&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">0</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;mouseEnter&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> enterAfter = wrapper.<span class=\"title function_\">html</span>();</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(enterBefore).<span class=\"property\">not</span>.<span class=\"title function_\">toEqual</span>(enterAfter);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;warning if set `value`&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">resetWarned</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> errorSpy = jest.<span class=\"title function_\">spyOn</span>(<span class=\"variable language_\">console</span>, <span class=\"string\">&#x27;error&#x27;</span>).<span class=\"title function_\">mockImplementation</span>(<span class=\"function\">() =&gt;</span> &#123;&#125;);</span><br><span class=\"line\">    <span class=\"title function_\">mount</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Checkbox</span> <span class=\"attr\">value</span> /&gt;</span></span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(errorSpy).<span class=\"title function_\">toHaveBeenCalledWith</span>(</span><br><span class=\"line\">      <span class=\"string\">&#x27;Warning: [antd: Checkbox] `value` is not a valid prop, do you mean `checked`?&#x27;</span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    errorSpy.<span class=\"title function_\">mockRestore</span>();</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"发现的问题\"><a class=\"markdownIt-Anchor\" href=\"#发现的问题\">#</a> 发现的问题</h2>\n<p>传递 Data 不存在问题 ，null 如何处理 data.length () 没有数据就报错 data &amp;&amp;</p>\n<ol>\n<li>接口数据类型定义不明确，由原来 any 改成 具体类型</li>\n<li>删除组件接口 / 函数参数多余的无用类型定义</li>\n<li>涉及 input 标签的组件， 存在有 value 无 onChange 现警告问题</li>\n<li>文本过长显示异常问题，做缩略显示处理</li>\n</ol>\n",
            "tags": [
                "测试"
            ]
        }
    ]
}