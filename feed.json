{
    "version": "https://jsonfeed.org/version/1",
    "title": "xu·live",
    "description": "永远热泪盈眶",
    "home_page_url": "https://18859421790.github.io",
    "items": [
        {
            "id": "https://18859421790.github.io/2023/09/02/%E8%A7%86%E9%A2%91%E6%B5%81/",
            "url": "https://18859421790.github.io/2023/09/02/%E8%A7%86%E9%A2%91%E6%B5%81/",
            "title": "web前端播放flv流的支持h265",
            "date_published": "2023-09-02T11:58:24.255Z",
            "content_html": "<h1 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>公司需要前端支持播放 h265 的视频流，因为公司之前使用的基本是 flv 的 h264 的视频流，所以特意去搜索了下 h264 和 h265 区别</p>\n<h2 id=\"h264和h265对比\"><a class=\"markdownIt-Anchor\" href=\"#h264和h265对比\">#</a> h264 和 h265 对比</h2>\n<h3 id=\"压缩效率\"><a class=\"markdownIt-Anchor\" href=\"#压缩效率\">#</a> 压缩效率：</h3>\n<p>H.265 比 H.264 具有更高的压缩效率，可以将相同质量的视频压缩为更小的文件大小。这意味着在相同比特率下，H.265 可以提供更好的视频质量，或者在相同质量下减少带宽占用。</p>\n<h3 id=\"视频质量\"><a class=\"markdownIt-Anchor\" href=\"#视频质量\">#</a> 视频质量：</h3>\n<p>H.265 通常提供更好的视频质量，尤其是在低比特率情况下。这意味着它可以更好地保留细节和减少视频噪声。</p>\n<h3 id=\"分辨率支持\"><a class=\"markdownIt-Anchor\" href=\"#分辨率支持\">#</a> 分辨率支持：</h3>\n<p>H.265 对于高分辨率视频的编码和解码更加高效。它更适合处理 4K 和 8K 视频。</p>\n<h3 id=\"带宽要求\"><a class=\"markdownIt-Anchor\" href=\"#带宽要求\">#</a> 带宽要求：</h3>\n<p>H.265 可以降低带宽需求，这对于在线视频流媒体和带宽受限的环境非常有用。</p>\n<h3 id=\"存储需求\"><a class=\"markdownIt-Anchor\" href=\"#存储需求\">#</a> 存储需求：</h3>\n<p>由于更高的压缩效率，H.265 编码的视频文件相对更小，可以节省存储空间。</p>\n<h3 id=\"计算资源\"><a class=\"markdownIt-Anchor\" href=\"#计算资源\">#</a> 计算资源：</h3>\n<p>H.265 编码和解码通常需要更多的计算资源，因为它是一种更复杂的编码标准。这可能需要更高性能的硬件支持。</p>\n<h3 id=\"广泛的支持\"><a class=\"markdownIt-Anchor\" href=\"#广泛的支持\">#</a> 广泛的支持：</h3>\n<p>H.264 是一个非常成熟的标准，几乎所有现代设备和软件都支持它。相比之下，H.265 的支持可能不如 H.264 广泛，尤其是在较旧的设备上。</p>\n<h3 id=\"未来趋势\"><a class=\"markdownIt-Anchor\" href=\"#未来趋势\">#</a> 未来趋势：</h3>\n<p>H.265 被认为是未来的视频编码标准，因为它提供了更好的性能和质量。越来越多的新设备和流媒体服务已经开始采用 H.265。</p>\n<div class=\"note info\">\n<p>综上，感觉 h265 就是除了支持度不高，基本全方面碾压 h264，但是 flv 由于历史原因一直不支持 h265，所以只能另外找插件使前端能播放 h264 视频</p>\n</div>\n<h2 id=\"扩展-flv-标准支持-h265\"><a class=\"markdownIt-Anchor\" href=\"#扩展-flv-标准支持-h265\">#</a> 扩展 FLV 标准支持 H265</h2>\n<ul>\n<li>目前国内 CDN 厂商扩展的 CodecID 一般都为 12，具体的 FLV H265 标准信息，可以参考 金山的 video_file_format_spec_v10_1 <a href='https://github.com/ksvc/FFmpeg/wiki'>这里</a></li>\n<li>FFmpeg patch 方法可以参考：金山云 H.265 patch 说明 <a href='https://github.com/ksvc/FFmpeg/wiki/instructions'>这里</a></li>\n</ul>\n<h2 id=\"wxinlineplayer\"><a class=\"markdownIt-Anchor\" href=\"#wxinlineplayer\">#</a> WXInlinePlayer</h2>\n<p>此插件可以使 flv 支持 h265 播放，同时支持 h264 播放。<br>\ngithub 地址 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvZmZlMTg5MS9XWElubGluZVBsYXllcg==\">这里</span> <br>\n进过测试，可以使用，但是播放视频前需要提前知道视频流是 h265 还是 h264。\\</p>\n<p>为了解决这个问题，在项目中加上以下代码解决</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onerror</span> = <span class=\"keyword\">function</span> <span class=\"title function_\">trace</span>(<span class=\"params\">msg, url, line</span>)&#123;</span><br><span class=\"line\">      <span class=\"comment\">//msg 错误信息 url错误地址  line错误行数</span></span><br><span class=\"line\">      <span class=\"comment\">// 统一使用h265解码，如果报以下错误就销毁播放器，使用h264解码</span></span><br><span class=\"line\">      <span class=\"comment\">// 原本是264解码，使用265解码会报错</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> errmsg = <span class=\"string\">&#x27;Assertion failed: offset + 2 &lt;= this-&gt;_length, at: /Users/yang.zhao/Documents/work/WXInlinePlayer/lib/codec/src/stream/buffer.cpp,243,read_uint16_be&#x27;</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(msg.<span class=\"title function_\">includes</span>(errmsg))&#123;</span><br><span class=\"line\">          <span class=\"comment\">// 销毁播放器，使用h265解码</span></span><br><span class=\"line\">        $(<span class=\"string\">&quot;iH265&quot;</span>).<span class=\"property\">checked</span> = !$(<span class=\"string\">&quot;iH265&quot;</span>).<span class=\"property\">checked</span></span><br><span class=\"line\">        <span class=\"title function_\">initPlayer</span>(<span class=\"title function_\">getOptions</span>());</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"videojs-flvh265\"><a class=\"markdownIt-Anchor\" href=\"#videojs-flvh265\">#</a> videoJS-FLVH265</h2>\n<p>github 地址    <a href='https://github.com/coffe1891/videojs-flvh265'>这里</a></p>\n<p>和 WXInlinePlayer 一样，解码器来自 WXInlinePlayer</p>\n<h2 id=\"h265webjs\"><a class=\"markdownIt-Anchor\" href=\"#h265webjs\">#</a> h265web.js</h2>\n<p>gitee 地址 <a href='https://gitee.com/hu60t/h265web.js/'>这里</a> <br>\n一个可支持 HEVC/H.265 编码播放 360P、480P、540P、720P、1080P 的 HEVC 播放器 <br>\n代码中每个版本会有一个 token，作用未知 <br>\n可以同时播放 h265 和！h254 视频</p>\n<h2 id=\"综上\"><a class=\"markdownIt-Anchor\" href=\"#综上\">#</a> 综上</h2>\n<p>作为直播流，前端除了拿到直播流的链接还需要像后端发送请求让摄像头向链接方向推流， <br>\nflv 会一直向链接出拿流资源，m3u8 则会向后端拿请求头，后端生成 m3u8 头文件太慢时前端会出现 404 报错，此时应该延迟请求或者等待</p>\n",
            "tags": []
        },
        {
            "id": "https://18859421790.github.io/2023/09/01/%E5%89%8D%E8%A8%80/",
            "url": "https://18859421790.github.io/2023/09/01/%E5%89%8D%E8%A8%80/",
            "title": "博客前言",
            "date_published": "2023-09-01T14:53:43.000Z",
            "content_html": "<h1 id=\"欢迎来到我的生活的一角\"><a class=\"markdownIt-Anchor\" href=\"#欢迎来到我的生活的一角\">#</a> 欢迎来到我的生活的一角</h1>\n<p>    生活，是一本厚重的书，每一天都是其中的一页。而我，就是这本书的作者。我热爱记录生活中的点滴，无论是令人心动的瞬间、技术的突破，还是那些平凡而珍贵的瞬间。</p>\n<p>    这个博客，是我的生活舞台，也是我的技术实验室。这里，我会与你分享我的生活故事，有趣的经历和发现，以及我在技术领域的探索。无论是一次激动人心的冒险，还是一次编程的突破，我都将在这里留下我的印记。</p>\n<p>    有时生活是美丽的，有时它是充满挑战的，但每一刻都值得被记录和分享。在这个数字时代，我们有幸能够用文字、图片和代码来捕捉生活的点点滴滴，留下一份珍贵的回忆，也与世界分享自己的独特视角。</p>\n<p>    我相信，每个人的生活都充满了独特的故事，每个人都可以通过分享来连接和启发他人。这个博客不仅仅是我个人的记录，更是与你共同探索生活和技术的舞台。我希望通过这个平台与你建立深刻的联系，一起分享快乐、激情和见解。</p>\n<p>    无论你是偶然发现这里，还是经常来访，我都非常感激你的支持和陪伴。在这里，我们将一起探索未知的领域，记录人生的精彩瞬间，并共同创造有意义的数字足迹。</p>\n<p>    让我们一起踏上这个充满探索和分享的旅程吧！我期待着与你一起留下更多精彩的故事和技术成果，共同创造属于我们的记忆。</p>\n<p>    不论你是来自世界的哪个角落，感谢你的到来，欢迎来到我的博客！</p>\n",
            "tags": [
                "随笔"
            ]
        },
        {
            "id": "https://18859421790.github.io/2023/09/01/%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1/",
            "url": "https://18859421790.github.io/2023/09/01/%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1/",
            "title": "为移动和桌面设备优化你的网站",
            "date_published": "2023-09-01T14:53:43.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>在当今数字时代，网站访问的设备种类多种多样，从桌面电脑到智能手机和平板电脑。作为前端开发者，你需要确保你的网站在不同的设备上都能够提供出色的用户体验。这就是响应式设计的重要性所在。</p>\n<h2 id=\"什么是响应式设计\"><a class=\"markdownIt-Anchor\" href=\"#什么是响应式设计\">#</a> 什么是响应式设计</h2>\n<p>响应式设计是一种网页设计方法，旨在使网站能够适应各种不同大小和分辨率的设备。它使用 CSS 媒体查询和弹性网格布局等技术，以确保网站的布局和内容在不同屏幕上都能够自动调整和优化。</p>\n<h2 id=\"为什么响应式设计如此重要\"><a class=\"markdownIt-Anchor\" href=\"#为什么响应式设计如此重要\">#</a> 为什么响应式设计如此重要</h2>\n<ul>\n<li>\n<p>用户体验：响应式设计提供了一致的用户体验，无论用户是使用大屏幕桌面电脑还是小屏幕智能手机。</p>\n</li>\n<li>\n<p>SEO 优化：谷歌和其他搜索引擎喜欢响应式设计，因为它使他们更容易索引和排名网站。这有助于提高你的网站在搜索结果中的可见性。</p>\n</li>\n<li>\n<p>维护简便：与维护多个单独的网站版本相比，响应式设计可以减少开发和维护的工作量，因为你只需管理一个网站。</p>\n</li>\n</ul>\n<h2 id=\"实施响应式设计的关键步骤\"><a class=\"markdownIt-Anchor\" href=\"#实施响应式设计的关键步骤\">#</a> 实施响应式设计的关键步骤</h2>\n<ul>\n<li>使用媒体查询</li>\n</ul>\n<p>媒体查询是 CSS 中的一种技术，允许你根据设备属性（如屏幕宽度）应用不同的 CSS 规则。这使得你可以为不同的设备定义不同的样式，从而创建响应式布局。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media (max-width: 768px) &#x27;&#123;&#x27;</span><br><span class=\"line\">    /* 在小屏幕上应用的样式 */</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@media (min-width: 769px) &#123;</span><br><span class=\"line\">    /* 在大屏幕上应用的样式 */</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>使用弹性网格布局</p>\n<p>弹性网格布局是一种灵活的布局技术，使你可以轻松创建适应不同屏幕大小的网格结构。它可以帮助你创建多列布局，同时确保内容适应屏幕。</p>\n</li>\n</ul>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.container &#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    flex-wrap: wrap;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>图像优化</p>\n<p>在响应式设计中，图像的大小和分辨率应根据设备进行优化，以减少加载时间和带宽消耗。你可以使用<img>元素的 srcset 属性来提供不同分辨率的图像。</p>\n</li>\n</ul>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=<span class=\"string\">&quot;image.jpg&quot;</span> alt=<span class=\"string\">&quot;响应式图像&quot;</span> srcset=<span class=\"string\">&quot;image-small.jpg 320w, image-medium.jpg 768w, image-large.jpg 1024w&quot;</span>&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"结语\"><a class=\"markdownIt-Anchor\" href=\"#结语\">#</a> 结语</h2>\n<p>响应式设计是现代前端开发的不可或缺的一部分，它有助于提供一致的用户体验，提高搜索引擎可见性，减少维护工作，同时满足不同设备用户的需求。在今天的数字时代，掌握响应式设计技术对于前端开发者来说至关重要。开始使用媒体查询、弹性网格布局和图像优化，使你的网站在各种设备上都能够闪耀。</p>\n<p>希望这篇文章有助于你理解和实施响应式设计。如果你有任何问题或想进一步了解响应式设计，请随时在评论中留言。感谢阅读！</p>\n",
            "tags": [
                "前端"
            ]
        }
    ]
}