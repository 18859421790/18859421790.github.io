{
    "version": "https://jsonfeed.org/version/1",
    "title": "xu·live",
    "description": "永远热泪盈眶",
    "home_page_url": "https://18859421790.github.io",
    "items": [
        {
            "id": "https://18859421790.github.io/2023/10/09/2023.10.9/",
            "url": "https://18859421790.github.io/2023/10/09/2023.10.9/",
            "title": "项目测试",
            "date_published": "2023-10-08T16:00:00.000Z",
            "content_html": "<h2 id=\"1-官网jest\"><a class=\"markdownIt-Anchor\" href=\"#1-官网jest\">#</a> 1. 官网 jest</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qZXN0anMuaW8vZG9jcy9lbi9tb2NrLWZ1bmN0aW9ucw==\">Mock Functions · Jest</span></p>\n<h3 id=\"11-相关文档\"><a class=\"markdownIt-Anchor\" href=\"#11-相关文档\">#</a> 1.1 相关文档</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2VjaGl6ZW4uZ2l0aHViLmlvL3RlY2gvMjAxNy8wMi0xMi1qZXN0LWVuenltZS1tZXRob2Q=\">使用 jest+enzyme 进行 react 项目测试 - 测试手法篇</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC82ODQ0OTAzNzYzNTI2ODI4MDQ1I2hlYWRpbmctMQ==\">Jest &amp; enzyme 进行 react 单元测试</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC82ODQ0OTAzOTM4MDAxNDY5NDQ4I2hlYWRpbmctMg==\">使用 enzyme + jest 测试 React 组件</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL2F2NzExODA3OTg0P3A9MQ==\"></span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL2F2NzExODA3OTg0P3A9MQ==\"></span></p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;test&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> container = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&#x27;div&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title class_\">ReactDOM</span>.<span class=\"title function_\">render</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ItremList</span> <span class=\"attr\">items</span>=<span class=\"string\">&#123;[]&#125;</span> /&gt;</span></span>, container);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(container.<span class=\"property\">textContent</span>).<span class=\"title function_\">toMatch</span>(<span class=\"string\">&#x27;no item&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-基础断言类型匹配\"><a class=\"markdownIt-Anchor\" href=\"#2-基础断言类型匹配\">#</a> 2. 基础断言类型匹配</h2>\n<blockquote>\n<p>toBe()    ===</p>\n</blockquote>\n<p>匹配器，是在工作中最常用的一种匹配器，简单的理解它就是相等。这个相当是等同于 === 的，也就是我们常说的严格相等。</p>\n<blockquote>\n<p>toEqual()   ==</p>\n</blockquote>\n<p>那你说我想让上面的测试结果是正确的，这时候我需要使用什么匹配器那？那就是使用 toEqual () 匹配器。可以把它理解成只要内容相等，就可以通过测试，比如修改代码如下: &lt;👿&gt; 所以说当你不严格匹配但要求值相等时时就可以使用 toEqual（）匹配器。</p>\n<blockquote>\n<p>toBeNull()</p>\n</blockquote>\n<p>匹配器只匹配 null 值，需要注意的是不匹配 undefined 的值。我们复制上面的代码，然后把代码修改成如下形式：</p>\n<blockquote>\n<p>toBeUndifined()</p>\n</blockquote>\n<p>那我们要匹配 undefined 时，就可以使用 toBeUndifined () 匹配器，比如写成如下代码。</p>\n<blockquote>\n<p>toBeDefined()</p>\n</blockquote>\n<p>匹配器的意思是只要定义过了，都可以匹配成功，例如下面的代码：</p>\n<blockquote>\n<p>toBeTruthy()</p>\n</blockquote>\n<p>这个是 <code>true</code>  和 <code>false</code>  匹配器，就相当于判断真假的。比如说写下面这样一段代码:</p>\n<blockquote>\n<p>toBeFalsy()</p>\n</blockquote>\n<p>有真就有假，跟 toBeTruthy () 对应的就是 toBeFalsy, 这个匹配器只要是返回的 false 就可以通过测试。</p>\n<h2 id=\"如何判定输出包括的内容\"><a class=\"markdownIt-Anchor\" href=\"#如何判定输出包括的内容\">#</a> 如何判定输出包括的内容</h2>\n<h2 id=\"tocontainitem\"><a class=\"markdownIt-Anchor\" href=\"#tocontainitem\">#</a> <strong> <code>toContain(item)</code> </strong></h2>\n<p>Use  <code>.toContain</code>  when you want to check that an item is in an array. For testing the items in the array, this uses  <code>===</code> , a strict equality check.  <code>.toContain</code>  can also check whether a string is a substring of another string.</p>\n<p>使用。当你想检查一个项目是否在一个数组中时。对于测试数组中的项，这使用 = = = ，一个严格的相等性检查。.toContain 还可以检查一个字符串是否是另一个字符串的子字符串。</p>\n<h2 id=\"钩子函数\"><a class=\"markdownIt-Anchor\" href=\"#钩子函数\">#</a> 钩子函数</h2>\n<blockquote>\n<p>beforeAll()</p>\n</blockquote>\n<p>钩子函数的意思是在所有测试用例之前进行执行。</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">afterAll</span>(<span class=\"function\">()=&gt;</span>&#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&#x27;在所有测试用例之前进行执行&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>afterAll()</p>\n</blockquote>\n<p>钩子函数是在完成所有测试用例之后才执行的函数。</p>\n<blockquote>\n<p>beforeEach()</p>\n</blockquote>\n<p>钩子函数，是在每个测试用例前都会执行一次的钩子函数</p>\n<blockquote>\n<p>afterEach()</p>\n</blockquote>\n<p>钩子函数，是在每次测试用例完成测试之后执行一次的钩子函数，比如下面的代码。</p>\n<h2 id=\"length\"><a class=\"markdownIt-Anchor\" href=\"#length\">#</a> .length</h2>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; shallow &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;enzyme&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> toDoList = <span class=\"title function_\">shallow</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ToDoList</span> <span class=\"attr\">tasks</span>=<span class=\"string\">&#123;tasks&#125;</span> /&gt;</span></span>); </span><br><span class=\"line\"><span class=\"title function_\">expect</span>(toDoList.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;li&#x27;</span>).<span class=\"property\">length</span>).<span class=\"title function_\">toEqual</span>(tasks.<span class=\"property\">length</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"测试react组件我们采用enzyme工具库它提供3种组件渲染方式\"><a class=\"markdownIt-Anchor\" href=\"#测试react组件我们采用enzyme工具库它提供3种组件渲染方式\">#</a> 测试 React 组件我们采用 <code>Enzyme</code>  工具库，它提供 3 种组件渲染方式：</h1>\n<ol>\n<li><code>Shallow</code> ：不会渲染子组件</li>\n<li><code>Mount</code> : 渲染子组件，同时包含生命周期函数如 <code>componentDidMount</code></li>\n<li><code>Render</code> : 渲染子组件，但不会包含生命周期，同时可用的 API 也会减少比如 <code>setState()</code></li>\n</ol>\n<h1 id=\"应该正确的呈现渲染\"><a class=\"markdownIt-Anchor\" href=\"#应该正确的呈现渲染\">#</a> 应该正确的呈现（渲染）</h1>\n<h3 id=\"render\"><a class=\"markdownIt-Anchor\" href=\"#render\">#</a> render</h3>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">**<span class=\"title function_\">it</span>(<span class=\"string\">&#x27;should render correctly&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123; </span><br><span class=\"line\">\t<span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">render</span>(</span><br><span class=\"line\">\t\t<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Radio</span> *<span class=\"attr\">className</span>*=<span class=\"string\">&quot;customized&quot;</span>&gt;</span>Test<span class=\"tag\">&lt;/<span class=\"name\">Radio</span>&gt;</span></span></span><br><span class=\"line\">\t);</span><br><span class=\"line\">  <span class=\"title function_\">expect</span>(wrapper).<span class=\"title function_\">toMatchSnapshot</span>(); </span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 二  引入import</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> toJson <span class=\"keyword\">from</span> <span class=\"string\">&#x27;enzyme-to-json&#x27;</span>;</span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;should render correctly&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">render</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">BorderTitleView</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(<span class=\"title function_\">toJson</span>(wrapper)).<span class=\"title function_\">toMatchSnapshot</span>();</span><br><span class=\"line\">  &#125;);**</span><br></pre></td></tr></table></figure>\n<h3 id=\"mount\"><a class=\"markdownIt-Anchor\" href=\"#mount\">#</a> mount</h3>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">**<span class=\"title function_\">it</span>(<span class=\"string\">&#x27;mount correctly&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123; </span><br><span class=\"line\">\t<span class=\"title function_\">expect</span>(<span class=\"function\">() =&gt;</span> <span class=\"title function_\">mount</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Button</span>&gt;</span>Follow<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span>)).<span class=\"property\">not</span>.<span class=\"title function_\">toThrow</span>(); </span><br><span class=\"line\">&#125;);**</span><br></pre></td></tr></table></figure>\n<h1 id=\"state-改变值测试\"><a class=\"markdownIt-Anchor\" href=\"#state-改变值测试\">#</a> State 改变值测试、</h1>\n<h3 id=\"点击完成ui显示的会变化\"><a class=\"markdownIt-Anchor\" href=\"#点击完成ui显示的会变化\">#</a> 点击完成 UI 显示的会变化</h3>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">test</span>(<span class=\"string\">&#x27;Change value of name&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 先確認 input 的 value 屬性</span></span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(counter.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;div&#x27;</span>).<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">props</span>().<span class=\"property\">value</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;無名氏&#x27;</span>)</span><br><span class=\"line\">    <span class=\"comment\">// setState</span></span><br><span class=\"line\">    counter.<span class=\"title function_\">setState</span>(&#123; <span class=\"attr\">name</span>: <span class=\"string\">&#x27;神Ｑ超人&#x27;</span> &#125;)</span><br><span class=\"line\">    <span class=\"comment\">// 確認 sate 及 span 中的文字是否改變</span></span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(counter.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;div&#x27;</span>).<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">props</span>().<span class=\"property\">value</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;神Ｑ超人&#x27;</span>)</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(counter.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;div&#x27;</span>).<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;span&#x27;</span>).<span class=\"title function_\">text</span>()).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;神Ｑ超人點了 1 下&#x27;</span>)</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> keyInput = enzymeWrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">keyInput.<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;change&#x27;</span>, &#123; <span class=\"attr\">target</span>: &#123; <span class=\"attr\">value</span>: <span class=\"string\">&#x27;RoleKey&#x27;</span> &#125; &#125;)</span><br></pre></td></tr></table></figure>\n<h1 id=\"ui交互测试\"><a class=\"markdownIt-Anchor\" href=\"#ui交互测试\">#</a> UI 交互测试</h1>\n<h3 id=\"snapshot\"><a class=\"markdownIt-Anchor\" href=\"#snapshot\">#</a> snapshot</h3>\n<p>snapshot 快照测试第一次运行的时候会将 React 组件在不同情况下的渲染结果保存一份快照文件。后面每次运行快照测试的时候，都会和第一次比较，想要生成新的快照文件添加  <code>u</code>  参数生成新的快照文件。快照文件是以  <code>.snap</code>  结尾的文件，会在运行测试的时候存放在  <code>__snapshots__</code>  文件夹下。</p>\n<h2 id=\"测试点击事件\"><a class=\"markdownIt-Anchor\" href=\"#测试点击事件\">#</a> 测试点击事件</h2>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">describe</span>(<span class=\"string\">&#x27;点击事件&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">it</span>(<span class=\"string\">&#x27;多次点击事件记录&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> num = [];</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;primary&quot;</span>&gt;</span>点击<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;button&#x27;</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">    num.<span class=\"title function_\">push</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;button&#x27;</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">    num.<span class=\"title function_\">push</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(num);</span><br><span class=\"line\">    <span class=\"keyword\">let</span> numleng = <span class=\"title function_\">expect</span>(num.<span class=\"property\">length</span>).<span class=\"title function_\">toBe</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">describe</span>(<span class=\"string\">&#x27;点击事件&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">it</span>(<span class=\"string\">&#x27;按钮 onClick 事件&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> state = <span class=\"string\">&#x27;default&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">handleClick</span> = res =&gt; &#123;</span><br><span class=\"line\">      state = res;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">SettingRoundRadioButtonGroupView</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">data</span>=<span class=\"string\">&#123;[</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            &#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">              <span class=\"attr\">language:</span> &#x27;<span class=\"attr\">中文</span>&#x27;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">              <span class=\"attr\">country:</span> &#x27;<span class=\"attr\">简体中文</span>(<span class=\"attr\">中国</span>)&#x27;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">              <span class=\"attr\">icon:</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                &#x27;<span class=\"attr\">https:</span>//<span class=\"attr\">discordapp.com</span>/<span class=\"attr\">assets</span>/<span class=\"attr\">b2da62f020089ccee92860e4defafdb4.png</span>&#x27;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            &#123;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">              <span class=\"attr\">language:</span> &#x27;<span class=\"attr\">日本語</span>&#x27;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">              <span class=\"attr\">country:</span> &#x27;<span class=\"attr\">日语</span>&#x27;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">              <span class=\"attr\">icon:</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">                &#x27;<span class=\"attr\">https:</span>//<span class=\"attr\">discordapp.com</span>/<span class=\"attr\">assets</span>/<span class=\"attr\">f23c5c28c4429691f7c54af93876d661.png</span>&#x27;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">            &#125;,</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          ]&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;res</span> =&gt;</span> handleClick(res)&#125;</span></span><br><span class=\"line\"><span class=\"language-xml\">        /&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;Styled(div)&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">1</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(state.<span class=\"property\">language</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;中文&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;弹窗中 onClose 按钮&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> state = <span class=\"string\">&#x27;default&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">onClose</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">      state = <span class=\"string\">&#x27;onClose&#x27;</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">ConfirmDialog</span> <span class=\"attr\">onClose</span>=<span class=\"string\">&#123;onClose&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;PrimaryButton&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">0</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(state).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;onClose&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"onchange\"><a class=\"markdownIt-Anchor\" href=\"#onchange\">#</a> onChange</h2>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">test</span>(<span class=\"string\">&#x27;pass a selected value to the onChange handler&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> value = <span class=\"string\">&#x27;2&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> onChange = jest.<span class=\"title function_\">fn</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">shallow</span>(</span><br><span class=\"line\">        <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Select</span> <span class=\"attr\">items</span>=<span class=\"string\">&#123;ITEMS&#125;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;onChange&#125;</span> /&gt;</span></span></span><br><span class=\"line\">    );</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(wrapper).<span class=\"title function_\">toMatchSnapshot</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;select&#x27;</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;change&#x27;</span>, &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: &#123; value &#125;,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(onChange).<span class=\"title function_\">toBeCalledWith</span>(value);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"dom-中元素匹配\"><a class=\"markdownIt-Anchor\" href=\"#dom-中元素匹配\">#</a> Dom  中元素匹配</h1>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//wrapper.text()</span></span><br><span class=\"line\">  <span class=\"title function_\">it</span>(<span class=\"string\">&#x27;should not insert space to link or text button&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Button</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span>&gt;</span>123<span class=\"tag\">&lt;/<span class=\"name\">Button</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(wrapper.<span class=\"title function_\">text</span>()).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;123&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<p>获取 Dom 中的值</p>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//组件带引号</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;ForwardRef(Backdrop)&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">0</span>).<span class=\"title function_\">props</span>().<span class=\"property\">open</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//组件不带引号也可以</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(wrapper.<span class=\"title function_\">find</span>(<span class=\"title class_\">SettingContainer</span>).<span class=\"title function_\">text</span>());</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;<span class=\"title class_\">EmojiIcon</span> size=&#123;<span class=\"number\">100</span>&#125; symbol=<span class=\"string\">&quot;🍉&quot;</span> onClick=&#123;[<span class=\"title class_\">Function</span>: onClick]&#125;&gt;</span><br><span class=\"line\">          <span class=\"language-xml\">&lt;Styled(span) className=&quot;makeStyles-root-10 makeStyles-root-11&quot; role=&quot;img&quot; aria-label=&quot;&quot; aria-hidden=&quot;true&quot; onClick=&#123;[Function: onClick]&#125;&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">className</span>=<span class=\"string\">&quot;span-root-12 makeStyles-root-10 makeStyles-root-11&quot;</span> <span class=\"attr\">role</span>=<span class=\"string\">&quot;img&quot;</span> <span class=\"attr\">aria-label</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">aria-hidden</span>=<span class=\"string\">&quot;true&quot;</span> <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;[Function:</span> <span class=\"attr\">onClick</span>]&#125;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">              🍉</span></span><br><span class=\"line\"><span class=\"language-xml\">            <span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">          &lt;/Styled(span)&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;/<span class=\"name\">EmojiIcon</span>&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(wrapper.<span class=\"title function_\">find</span>(<span class=\"title class_\">EmojiIcon</span>).<span class=\"title function_\">props</span>().<span class=\"property\">size</span>); <span class=\"comment\">// 100</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//相同Dom结构时候取数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;should warning correctly&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;default&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;warning&quot;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(wrapper.<span class=\"title function_\">find</span>(<span class=\"title class_\">Input</span>).<span class=\"title function_\">at</span>(<span class=\"number\">0</span>).<span class=\"title function_\">props</span>().<span class=\"property\">type</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;default&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(wrapper.<span class=\"title function_\">find</span>(<span class=\"title class_\">Input</span>).<span class=\"title function_\">at</span>(<span class=\"number\">1</span>).<span class=\"title function_\">props</span>().<span class=\"property\">type</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;warning&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"tojson\"><a class=\"markdownIt-Anchor\" href=\"#tojson\">#</a> toJson</h2>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; mount &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;enzyme&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> toJson <span class=\"keyword\">from</span> <span class=\"string\">&#x27;enzyme-to-json&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">describe</span>(<span class=\"string\">&#x27;Input correctly &#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">it</span>(<span class=\"string\">&#x27;should render correctly&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">render</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">Input</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(<span class=\"title function_\">toJson</span>(wrapper)).<span class=\"title function_\">toMatchSnapshot</span>();</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"onclick事件\"><a class=\"markdownIt-Anchor\" href=\"#onclick事件\">#</a> onClick 事件</h2>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;选中按钮 onClick 事件&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> onClickItem = jest.<span class=\"title function_\">fn</span>();</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">SettingDirectory</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">select</span>=<span class=\"string\">&#123;</span>&#x27;/<span class=\"attr\">setting</span>/<span class=\"attr\">usersettingsaccount</span>&#x27;&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">data</span>=<span class=\"string\">&#123;data&#125;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">          <span class=\"attr\">onClick</span>=<span class=\"string\">&#123;onClickItem&#125;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">        /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;DirectoryButton&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">0</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(onClickItem).<span class=\"title function_\">toHaveBeenCalled</span>();</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(onClickItem).<span class=\"title function_\">toHaveBeenCalledTimes</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;DirectoryButton&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">0</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;click&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(onClickItem).<span class=\"title function_\">toHaveBeenCalled</span>();</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(onClickItem).<span class=\"title function_\">toHaveBeenCalledTimes</span>(<span class=\"number\">2</span>);</span><br><span class=\"line\">    jest.<span class=\"title function_\">clearAllMocks</span>();</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;onChange get value&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> eventObject;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> eventObjectValue;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">onChange</span> = e =&gt; &#123;</span><br><span class=\"line\">      eventObject = e;</span><br><span class=\"line\">      eventObjectValue = e.<span class=\"property\">target</span>.<span class=\"property\">value</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> wrapper = <span class=\"title function_\">mount</span>(</span><br><span class=\"line\">      <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">ThemeWrap</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        <span class=\"tag\">&lt;<span class=\"name\">SettingInput</span> <span class=\"attr\">value</span>=<span class=\"string\">&quot;value测试数据&quot;</span> <span class=\"attr\">onChange</span>=<span class=\"string\">&#123;onChange&#125;</span> /&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">ThemeWrap</span>&gt;</span></span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;SettingInput&#x27;</span>).<span class=\"title function_\">props</span>().<span class=\"property\">value</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;value测试数据&#x27;</span>);</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;input&#x27;</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;change&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(eventObject.<span class=\"property\">type</span>).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;change&#x27;</span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(eventObjectValue).<span class=\"title function_\">toBe</span>(<span class=\"string\">&#x27;value测试数据&#x27;</span>);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123;</span><br><span class=\"line\">  mountTest,</span><br><span class=\"line\">  renderTest,</span><br><span class=\"line\">&#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;../../../../../../tests/common/mountTest&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">describe</span>(<span class=\"string\">&#x27;DirectoryButton Correctly &#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">mountTest</span>(<span class=\"function\">() =&gt;</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">DirectoryButton</span> /&gt;</span></span>);</span><br><span class=\"line\">  <span class=\"title function_\">renderTest</span>(<span class=\"function\">() =&gt;</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">DirectoryButton</span> /&gt;</span></span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> interface notFindTextType &#123;</span><br><span class=\"line\">  <span class=\"attr\">title</span>: string;</span><br><span class=\"line\">  <span class=\"attr\">des</span>: string;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">[];</span><br></pre></td></tr></table></figure>\n<h2 id=\"前后dom变化对比\"><a class=\"markdownIt-Anchor\" href=\"#前后dom变化对比\">#</a> 前后 DOM 变化对比</h2>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> enterBefore = wrapper.<span class=\"title function_\">html</span>();</span><br><span class=\"line\">    wrapper.<span class=\"title function_\">find</span>(<span class=\"title class_\">Tree</span>).<span class=\"title function_\">find</span>(<span class=\"string\">&#x27;.div-root-371&#x27;</span>).<span class=\"title function_\">at</span>(<span class=\"number\">0</span>).<span class=\"title function_\">simulate</span>(<span class=\"string\">&#x27;mouseEnter&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> enterAfter = wrapper.<span class=\"title function_\">html</span>();</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(enterBefore).<span class=\"property\">not</span>.<span class=\"title function_\">toEqual</span>(enterAfter);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">it</span>(<span class=\"string\">&#x27;warning if set `value`&#x27;</span>, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"title function_\">resetWarned</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> errorSpy = jest.<span class=\"title function_\">spyOn</span>(<span class=\"variable language_\">console</span>, <span class=\"string\">&#x27;error&#x27;</span>).<span class=\"title function_\">mockImplementation</span>(<span class=\"function\">() =&gt;</span> &#123;&#125;);</span><br><span class=\"line\">    <span class=\"title function_\">mount</span>(<span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">Checkbox</span> <span class=\"attr\">value</span> /&gt;</span></span>);</span><br><span class=\"line\">    <span class=\"title function_\">expect</span>(errorSpy).<span class=\"title function_\">toHaveBeenCalledWith</span>(</span><br><span class=\"line\">      <span class=\"string\">&#x27;Warning: [antd: Checkbox] `value` is not a valid prop, do you mean `checked`?&#x27;</span>,</span><br><span class=\"line\">    );</span><br><span class=\"line\">    errorSpy.<span class=\"title function_\">mockRestore</span>();</span><br><span class=\"line\">  &#125;);</span><br></pre></td></tr></table></figure>\n<h2 id=\"发现的问题\"><a class=\"markdownIt-Anchor\" href=\"#发现的问题\">#</a> 发现的问题</h2>\n<p>传递 Data 不存在问题 ，null 如何处理 data.length () 没有数据就报错 data &amp;&amp;</p>\n<ol>\n<li>接口数据类型定义不明确，由原来 any 改成 具体类型</li>\n<li>删除组件接口 / 函数参数多余的无用类型定义</li>\n<li>涉及 input 标签的组件， 存在有 value 无 onChange 现警告问题</li>\n<li>文本过长显示异常问题，做缩略显示处理</li>\n</ol>\n",
            "tags": [
                "测试"
            ]
        },
        {
            "id": "https://18859421790.github.io/2023/10/08/2023.10.8/",
            "url": "https://18859421790.github.io/2023/10/08/2023.10.8/",
            "title": "react+ts 使用总结",
            "date_published": "2023-10-07T16:00:00.000Z",
            "content_html": "<h2 id=\"可能是你需要的-react-typescript-50-条规范和经验\"><a class=\"markdownIt-Anchor\" href=\"#可能是你需要的-react-typescript-50-条规范和经验\">#</a> 可能是你需要的 React + TypeScript 50 条规范和经验</h2>\n<blockquote>\n<p>这篇文章没有对错之分，肯定也有不完善的地方，结合了自己日常开发和经验。可以让你书写代码更具严谨性，希望看完之后有所帮助。本文字数 4000+ ，看完本文大概需半小时。</p>\n</blockquote>\n<h3 id=\"1-注释\"><a class=\"markdownIt-Anchor\" href=\"#1-注释\">#</a> 1. 注释</h3>\n<h4 id=\"1-文件顶部的注释包括描述-作者-日期\"><a class=\"markdownIt-Anchor\" href=\"#1-文件顶部的注释包括描述-作者-日期\">#</a> (1) 文件顶部的注释，包括描述、作者、日期</h4>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@description</span> <span class=\"variable\">xxxxxx</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> <span class=\"variable\">chengfeng</span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@since</span> 19/05/21</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2-模块的注释\"><a class=\"markdownIt-Anchor\" href=\"#2-模块的注释\">#</a> (2) 模块的注释</h4>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 拷贝数据</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  &#123;<span class=\"type\">*</span>&#125;  data   要拷贝的源数据</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param</span>  &#123;<span class=\"type\">boolean</span>&#125; [isDeep=false] 是否深拷贝，默认浅拷贝</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@return</span> &#123;<span class=\"type\">*</span>&#125;         返回拷贝后的数据</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3-业务代码注释\"><a class=\"markdownIt-Anchor\" href=\"#3-业务代码注释\">#</a> (3) 业务代码注释</h4>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*业务代码注释*/</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"4-变量注释\"><a class=\"markdownIt-Anchor\" href=\"#4-变量注释\">#</a> (4) 变量注释</h4>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface <span class=\"title class_\">IState</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 名字</span></span><br><span class=\"line\">  <span class=\"attr\">name</span>: string;</span><br><span class=\"line\">  <span class=\"comment\">// 电话</span></span><br><span class=\"line\">  <span class=\"attr\">phone</span>: number;</span><br><span class=\"line\">  <span class=\"comment\">// 地址</span></span><br><span class=\"line\">  <span class=\"attr\">address</span>: string;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-引用组件顺序\"><a class=\"markdownIt-Anchor\" href=\"#2-引用组件顺序\">#</a> 2. 引用组件顺序</h3>\n<ul>\n<li>先引用外部组件库，再引用当前组件块级组件，然后是 common 里的公共函数库最后是 css 样式</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> <span class=\"title class_\">React</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Dropdown</span>, <span class=\"title class_\">Menu</span>, <span class=\"title class_\">Icon</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;antd&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"title class_\">Header</span> <span class=\"keyword\">from</span> <span class=\"string\">&quot;./Header&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> toast <span class=\"keyword\">from</span> <span class=\"string\">&quot;common/toast&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"string\">&quot;./index.less&quot;</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-引号\"><a class=\"markdownIt-Anchor\" href=\"#3-引号\">#</a> 3. 引号</h3>\n<ul>\n<li>使用单引号，或者 es6 的反引号</li>\n</ul>\n<h3 id=\"4-缩进\"><a class=\"markdownIt-Anchor\" href=\"#4-缩进\">#</a> 4. 缩进</h3>\n<ul>\n<li>使用两个空格</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">handleCheck</span> = (<span class=\"params\"></span>) =&gt; &#123;</span><br><span class=\"line\">  onCancel &amp;&amp; <span class=\"title function_\">onCancel</span>();</span><br><span class=\"line\">  onClose &amp;&amp; <span class=\"title function_\">onClose</span>();</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-分号\"><a class=\"markdownIt-Anchor\" href=\"#5-分号\">#</a> 5. 分号</h3>\n<ul>\n<li>除了代码块的以外的每个表达式后必须加分号。</li>\n</ul>\n<h3 id=\"6-括号\"><a class=\"markdownIt-Anchor\" href=\"#6-括号\">#</a> 6. 括号</h3>\n<p>下列关键字后必须有大括号（即使代码块的内容只有一行）：if, else, for, while, do, switch, try, catch, finally, with。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// not good</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (condition) <span class=\"title function_\">doSomething</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (condition) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">doSomething</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-空格\"><a class=\"markdownIt-Anchor\" href=\"#7-空格\">#</a> 7. 空格</h3>\n<ul>\n<li>二元和三元运算符两侧必须有一个空格，一元运算符与操作对象之间不允许有空格。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// bad</span><br><span class=\"line\">++ x;</span><br><span class=\"line\">y ++;</span><br><span class=\"line\">z = x?1:2;</span><br><span class=\"line\"></span><br><span class=\"line\">// good</span><br><span class=\"line\">++x;</span><br><span class=\"line\">y++;</span><br><span class=\"line\">z = x ? 1 : 2;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>用作代码块起始的左花括号 { 前必须有一个空格。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// bad</span><br><span class=\"line\"><span class=\"keyword\">if</span> (condition)&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (condition)&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">funcName</span></span>()&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// good</span><br><span class=\"line\"><span class=\"keyword\">if</span> (condition) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (condition) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">funcName</span></span>() &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>if /else/for /while/function /switch/do /try/catch /finally 关键字后，必须有一个空格。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// bad</span><br><span class=\"line\"><span class=\"keyword\">if</span>(condition) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span>(condition) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"function\"><span class=\"title\">function</span></span>() &#123;</span><br><span class=\"line\">&#125;)();</span><br><span class=\"line\"></span><br><span class=\"line\">// good</span><br><span class=\"line\"><span class=\"keyword\">if</span> (condition) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> (condition) &#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">(<span class=\"function\"><span class=\"title\">function</span></span> () &#123;</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在对象创建时，属性中的：之后必须有空格，: 之前不允许有空格。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// bad</span><br><span class=\"line\">var obj = &#123;</span><br><span class=\"line\">    a : 1,</span><br><span class=\"line\">    b:2,</span><br><span class=\"line\">    c :3</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">// good</span><br><span class=\"line\">var obj = &#123;</span><br><span class=\"line\">    a: 1,</span><br><span class=\"line\">    b: 2,</span><br><span class=\"line\">    c: 3</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"8-换行\"><a class=\"markdownIt-Anchor\" href=\"#8-换行\">#</a> 8. 换行</h3>\n<ul>\n<li>每个独立语句结束后必须换行。</li>\n<li>在函数声明、函数表达式、函数调用、对象创建、数组创建、for 语句等场景中，不允许在，或；前换行</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// bad</span><br><span class=\"line\">var obj = &#123;</span><br><span class=\"line\">    a: 1</span><br><span class=\"line\">    , b: 2</span><br><span class=\"line\">    , c: 3,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">test</span></span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (const key <span class=\"keyword\">in</span> object)</span><br><span class=\"line\"> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (object.hasOwnProperty(key)) &#123;</span><br><span class=\"line\">    const element = object[key];</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">// good</span><br><span class=\"line\">var obj = &#123;</span><br><span class=\"line\">    a: 1,</span><br><span class=\"line\">    b: 2,</span><br><span class=\"line\">    c: 3,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"function\"><span class=\"title\">test</span></span>() &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (const key <span class=\"keyword\">in</span> object) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (object.hasOwnProperty(key)) &#123;</span><br><span class=\"line\">    const element = object[key];</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>下列关键字后：else, catch, finally 不需要换行</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// bad</span><br><span class=\"line\"><span class=\"keyword\">if</span> (condition) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">try &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">catch (e) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">finally &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">// good</span><br><span class=\"line\"><span class=\"keyword\">if</span> (condition) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">try &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125; catch (e) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125; finally &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"9-数组-对象\"><a class=\"markdownIt-Anchor\" href=\"#9-数组-对象\">#</a> 9. 数组、对象</h3>\n<ul>\n<li>对象属性名不需要加引号；</li>\n<li>对象以缩进的形式书写，不要写在一行；</li>\n<li>数组最后不要有逗号。</li>\n<li>对象最后要有逗号。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">// bad</span><br><span class=\"line\">const a = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;b&#x27;</span>: 1</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">const a = &#123;b: 1&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">const a = &#123;</span><br><span class=\"line\">    b: 1,</span><br><span class=\"line\">    c: 2</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">const arr = [1, 2, 3, 4,];</span><br><span class=\"line\"></span><br><span class=\"line\">// good</span><br><span class=\"line\">const a = &#123;</span><br><span class=\"line\">    b: 1,</span><br><span class=\"line\">    c: 2,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">const arr = [1, 2, 3, 4];</span><br></pre></td></tr></table></figure>\n<h3 id=\"10-命名\"><a class=\"markdownIt-Anchor\" href=\"#10-命名\">#</a> 10. 命名</h3>\n<ul>\n<li>\n<p>类名：大驼峰式风格，字母和数字，例如：AbcTest。禁止汉字、特殊符号，禁止非大驼峰式风格。</p>\n</li>\n<li>\n<p>函数名：小驼峰式风格，字母和数字，例如：abcTest。禁止汉字、特殊符号，禁止非小驼峰式风格，例如 snake_case 等。</p>\n</li>\n<li>\n<p>变量名：同函数名。</p>\n</li>\n<li>\n<p>常量：全大写风格，大写字母、数字和下划线，单词之间以下划线分隔，例如：ABC_TEST。禁止汉字、特殊符号、小写字母。</p>\n</li>\n<li>\n<p>使用 onXxx 形式作为 props 中用于回调的属性名称。</p>\n</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface <span class=\"title class_\">IProps</span> &#123;</span><br><span class=\"line\">  onClose?: <span class=\"function\">() =&gt;</span> <span class=\"keyword\">void</span>;</span><br><span class=\"line\">  onOk?: <span class=\"function\">(<span class=\"params\">item: Record&lt;string, any&gt;</span>) =&gt;</span> <span class=\"keyword\">void</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>组件内的事件函数使用 handle 开头尾，handleCheckBtn。</li>\n<li>使用 withXxx 形式的词作为高阶组件的名称。</li>\n<li>接口命名前面带上 I 表示 interface</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface <span class=\"title class_\">IProps</span> &#123;&#125;</span><br><span class=\"line\">interface <span class=\"title class_\">IState</span> &#123;&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"11-类型断言\"><a class=\"markdownIt-Anchor\" href=\"#11-类型断言\">#</a> 11. 类型断言</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// bad</span><br><span class=\"line\"><span class=\"keyword\">function</span> getLength(something: string | number): number &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> something.length;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// index.ts(2,22): error TS2339: Property <span class=\"string\">&#x27;length&#x27;</span> does not exist on <span class=\"built_in\">type</span> <span class=\"string\">&#x27;string | number&#x27;</span>.</span><br><span class=\"line\">//   Property <span class=\"string\">&#x27;length&#x27;</span> does not exist on <span class=\"built_in\">type</span> <span class=\"string\">&#x27;number&#x27;</span>.</span><br><span class=\"line\"></span><br><span class=\"line\">// bad</span><br><span class=\"line\"><span class=\"keyword\">function</span> getLength(something: string | number): number &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((&lt;string&gt;something).length) &#123;</span><br><span class=\"line\">        return (&lt;string&gt;something).length;</span><br><span class=\"line\">    &#125; else &#123;</span><br><span class=\"line\">        return something.toString().length;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// good</span><br><span class=\"line\">function getLength(something: string | number): number &#123;</span><br><span class=\"line\">  if (typeof something === &#x27;string&#x27;) &#123;</span><br><span class=\"line\">    return something.length;</span><br><span class=\"line\">  &#125; else &#123;</span><br><span class=\"line\">    return something.toString().length;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"12-interface-声明顺序\"><a class=\"markdownIt-Anchor\" href=\"#12-interface-声明顺序\">#</a> 12. interface 声明顺序</h3>\n<p>日常用到比较多的是四种，只读参数放第一位，必选参数第二位，可选参数次之，不确定参数放最后</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface iProps &#123;</span><br><span class=\"line\">  <span class=\"built_in\">readonly</span> x: number;</span><br><span class=\"line\">  <span class=\"built_in\">readonly</span> y: number;</span><br><span class=\"line\">  name: string;</span><br><span class=\"line\">  age: number;</span><br><span class=\"line\">  height?: number;</span><br><span class=\"line\">  [propName: string]: any;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"13-ts-好用的相关工具泛型\"><a class=\"markdownIt-Anchor\" href=\"#13-ts-好用的相关工具泛型\">#</a> 13. ts 好用的相关工具泛型</h3>\n<ul>\n<li>Record&lt;string,any&gt; 用这个来声明对象结构的类型</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用于定义一个javascript的对象，key是字符串，value是任意类型</span><br><span class=\"line\">const people:Record&lt;string,any&gt; = &#123;</span><br><span class=\"line\">    name: <span class=\"string\">&#x27;chengfeng&#x27;</span>,</span><br><span class=\"line\">    age: 10</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Partial 作用是将传入的属性变为可选项.</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface iPeople &#123;</span><br><span class=\"line\">    title: string;</span><br><span class=\"line\">    name: string;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">const people: Partial&lt;iPeople&gt; = &#123;</span><br><span class=\"line\">    title: <span class=\"string\">&#x27;Delete inactive users&#x27;</span>,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">定义的结构可以是接口iPeople的任意key</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Readonly 作用是将传入的属性变为变成只读</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface iPeople &#123;</span><br><span class=\"line\">    title: string;</span><br><span class=\"line\">    name: string;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">const people: Readonly&lt;Todo&gt; = &#123;</span><br><span class=\"line\">    title: <span class=\"string\">&#x27;todo list&#x27;</span>,</span><br><span class=\"line\">    name: chenfeng;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">title name属性就是只读的了</span><br></pre></td></tr></table></figure>\n<ul>\n<li>Required 的作用是将传入的属性变为必选项</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface iPeople &#123;</span><br><span class=\"line\">    title?: string;</span><br><span class=\"line\">    name?: string;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">const people1: Props = &#123; title: <span class=\"string\">&#x27;ts&#x27;</span> &#125;; // OK</span><br><span class=\"line\"></span><br><span class=\"line\">const people22: Required&lt;iPeople&gt; = &#123; title: <span class=\"string\">&#x27;ts&#x27;</span> &#125;; // Error: property <span class=\"string\">&#x27;name&#x27;</span> missing</span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01pY3Jvc29mdC9UeXBlU2NyaXB0LUhhbmRib29rL2RpZmZzLzA/YmFzZV9zaGE9MjJiMzdhMmQ4YzlhMWRkMzc4Nzk1NDQ0YmFmOTU0YzJlN2VjY2NmNSZhbXA7Y29tbWVudGFibGU9dHJ1ZSZhbXA7aGVhZF91c2VyPWNzYW50b3M0MiZhbXA7cHVsbF9udW1iZXI9ODAxJmFtcDtzaGExPTIyYjM3YTJkOGM5YTFkZDM3ODc5NTQ0NGJhZjk1NGMyZTdlY2NjZjUmYW1wO3NoYTI9OWQ0YzU2ZjVkNDE0ZGJlMjM3ODA3MTk4ODViYWEzZGY0MDIyMjQxMiZhbXA7c2hvcnRfcGF0aD0wYjJkYTUxJmFtcDt1bmNoYW5nZWQ9ZXhwYW5kZWQmYW1wO3V0Zjg9JUUyJTlDJTkzI3JlcXVpcmVkdA==\">查看更多</span></p>\n<h3 id=\"14-ts-一些好用的小-tips\"><a class=\"markdownIt-Anchor\" href=\"#14-ts-一些好用的小-tips\">#</a> 14. ts 一些好用的小 tips</h3>\n<ul>\n<li>keyof</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">interface iPeople &#123;</span><br><span class=\"line\">  name: string;</span><br><span class=\"line\">  age: number</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">type</span> T = keyof iPeople // -&gt; <span class=\"string\">&quot;name&quot;</span> | <span class=\"string\">&quot;age&quot;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>in</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">type</span> Keys = <span class=\"string\">&quot;a&quot;</span> | <span class=\"string\">&quot;b&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">type</span> Obj =  &#123;</span><br><span class=\"line\">  [p <span class=\"keyword\">in</span> Keys]: any</span><br><span class=\"line\">&#125; // -&gt; &#123; a: any, b: any &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"15-规范其他\"><a class=\"markdownIt-Anchor\" href=\"#15-规范其他\">#</a> 15. 规范其他</h3>\n<ul>\n<li>不要使用 var 声明变量</li>\n<li>不会被修改的变量使用 const 声明</li>\n<li>去除声明但未被引用的代码</li>\n<li>禁止在代码里使用 debug</li>\n<li>不允许有空的代码块</li>\n</ul>\n<h3 id=\"16-仅当初始-state-需要从-props-计算得到的时候才将-state-的声明放在构造函数中其它情况下使用静态属性声明-state并且一般情况下不要将-prop-传给-state\"><a class=\"markdownIt-Anchor\" href=\"#16-仅当初始-state-需要从-props-计算得到的时候才将-state-的声明放在构造函数中其它情况下使用静态属性声明-state并且一般情况下不要将-prop-传给-state\">#</a> 16. 仅当初始 state 需要从 props 计算得到的时候，才将 state 的声明放在构造函数中，其它情况下使用静态属性声明 state, 并且一般情况下不要将 prop 传给 state，</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"title function_\">constructor</span> ()&#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123; <span class=\"attr\">people</span>: <span class=\"variable language_\">this</span>.<span class=\"property\">props</span>.<span class=\"property\">people</span> &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"attr\">state</span>: <span class=\"title class_\">IState</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">people</span>: &#123;&#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"17-渲染默认值\"><a class=\"markdownIt-Anchor\" href=\"#17-渲染默认值\">#</a> 17. 渲染默认值</h3>\n<ul>\n<li>添加非空判断可以提高代码的稳健性，例如后端返回的一些值，可能会出现不存在的情况，应该要给默认值.</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"title function_\">render</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  &#123;name&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"title function_\">render</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  &#123;!!name || <span class=\"string\">&#x27;--&#x27;</span>&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>还有一种情况，就是本来后端应该返回一个数组给你，但是数据库取不到数据，可能后端给你返回了 null, 然后前端 null.length。这样就 gg 了</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; list, totalCount &#125; = <span class=\"keyword\">await</span> <span class=\"title function_\">getPeopleList</span>(keyword, page, pageSize);</span><br><span class=\"line\">list 可能是<span class=\"literal\">null</span>或者<span class=\"literal\">undefined</span></span><br><span class=\"line\">list.<span class=\"property\">length</span>将直接导致前端报错</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: <span class=\"variable constant_\">STATUS</span>.<span class=\"property\">READY</span>,</span><br><span class=\"line\">  <span class=\"attr\">apps</span>: list,</span><br><span class=\"line\">  <span class=\"attr\">total</span>: totalCount,</span><br><span class=\"line\">  <span class=\"attr\">page</span>: page,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; list, totalCount &#125; = <span class=\"keyword\">await</span> <span class=\"title function_\">getPeopleList</span>(keyword, page, pageSize);</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">status</span>: <span class=\"variable constant_\">STATUS</span>.<span class=\"property\">READY</span>,</span><br><span class=\"line\">  <span class=\"attr\">apps</span>: list || [],</span><br><span class=\"line\">  <span class=\"attr\">total</span>: totalCount || <span class=\"number\">0</span>,</span><br><span class=\"line\">  <span class=\"attr\">page</span>: page,</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"18-不确定的属性最后却疯狂的用访问不存在的属性\"><a class=\"markdownIt-Anchor\" href=\"#18-不确定的属性最后却疯狂的用访问不存在的属性\">#</a> 18. 不确定的属性，最后却疯狂的用… 访问不存在的属性</h3>\n<p>例如一些地方，不确定这个变量里面到底有什么，但自己觉得有，就疯狂的…, 最明显的就是后端返回了一个对象给你，前端拿到之后判断都不判断直接 data.dataList.forEach ()</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> <span class=\"title function_\">getPeopleList</span>(keyword, page, pageSize);</span><br><span class=\"line\">data.<span class=\"property\">dataList</span>.<span class=\"title function_\">forEach</span>() <span class=\"comment\">// 直接挂了</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> data = <span class=\"keyword\">await</span> <span class=\"title function_\">getPeopleList</span>(keyword, page, pageSize);</span><br><span class=\"line\"><span class=\"keyword\">if</span> (data &amp;&amp; data.<span class=\"property\">dataList</span> &amp;&amp; <span class=\"title class_\">Array</span>.<span class=\"title function_\">isArray</span>(<span class=\"params\">data.dataList</span>) &#123;</span><br><span class=\"line\">    data.<span class=\"property\">dataList</span>.<span class=\"title function_\">forEach</span>()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"19-数据格式转换\"><a class=\"markdownIt-Anchor\" href=\"#19-数据格式转换\">#</a> 19. 数据格式转换</h3>\n<ol>\n<li>把字符串转整型可以使用 + 号</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> maxPrice = +form.<span class=\"property\">maxPrice</span>.<span class=\"property\">value</span>;</span><br><span class=\"line\"><span class=\"keyword\">let</span> maxPrice = <span class=\"title class_\">Number</span>(form.<span class=\"property\">maxPrice</span>.<span class=\"property\">value</span>);</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>转成 boolean 值用！！</li>\n</ol>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> mobile = !!ua.<span class=\"title function_\">match</span>(<span class=\"regexp\">/iPhone|iPad|Android|iPod|Windows Phone/</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"20-判断条件真假\"><a class=\"markdownIt-Anchor\" href=\"#20-判断条件真假\">#</a> 20. 判断条件真假</h3>\n<p>js 中以下为假，其他情况为真</p>\n<ul>\n<li>false</li>\n<li>null</li>\n<li>undefined</li>\n<li>0</li>\n<li>‘’ (空字符串)</li>\n<li>NaN</li>\n</ul>\n<h3 id=\"21-简单组件可以使用函数代替\"><a class=\"markdownIt-Anchor\" href=\"#21-简单组件可以使用函数代替\">#</a> 21. 简单组件可以使用函数代替</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Listing</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;this.props.hello&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">Listing</span>(<span class=\"params\">&#123; hello &#125;</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span>&#123;hello&#125;<span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"22-对于常用的属性进行缓存\"><a class=\"markdownIt-Anchor\" href=\"#22-对于常用的属性进行缓存\">#</a> 22. 对于常用的属性进行缓存</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">props</span>.<span class=\"property\">app</span>.<span class=\"property\">openid</span>;</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">time</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; app &#125; = <span class=\"variable language_\">this</span>.<span class=\"property\">props</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; time &#125; = <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(app.<span class=\"property\">openid</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"23-input-输入框使用-trim\"><a class=\"markdownIt-Anchor\" href=\"#23-input-输入框使用-trim\">#</a> 23. input 输入框使用 trim ()</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> searchContent = form.<span class=\"property\">search</span>.<span class=\"property\">value</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> searchContent = form.<span class=\"property\">search</span>.<span class=\"property\">value</span>.<span class=\"title function_\">trim</span>();</span><br></pre></td></tr></table></figure>\n<h3 id=\"24-使用-location-跳转前需要先转义\"><a class=\"markdownIt-Anchor\" href=\"#24-使用-location-跳转前需要先转义\">#</a> 24. 使用 location 跳转前需要先转义</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> = redirectUrl + <span class=\"string\">&quot;?a=10&amp;b=20&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span> = redirectUrl + <span class=\"built_in\">encodeURIComponent</span>(<span class=\"string\">&quot;?a=10&amp;b=20&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"25-使用-react-router\"><a class=\"markdownIt-Anchor\" href=\"#25-使用-react-router\">#</a> 25. 使用 react-router</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; withRouter, <span class=\"title class_\">RouteComponentProps</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react-router-dom&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> interface <span class=\"title class_\">IProps</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">RouteComponentProps</span>&lt;any&gt; &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span>&lt;<span class=\"title class_\">IProps</span>, <span class=\"title class_\">AppStates</span>&gt; &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">withRouter</span>(<span class=\"title class_\">App</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; withRouter, <span class=\"title class_\">RouteComponentProps</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react-router-dom&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span>&lt;</span><br><span class=\"line\">  <span class=\"title class_\">IProps</span> &amp; <span class=\"title class_\">RouteComponentProps</span>&lt;&#123;&#125;&gt;,</span><br><span class=\"line\">  <span class=\"title class_\">AppStates</span></span><br><span class=\"line\">&gt; &#123;&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"title function_\">withRouter</span>(<span class=\"title class_\">App</span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"26-同时开发数据请求-api-目录-git-冲突目录方案\"><a class=\"markdownIt-Anchor\" href=\"#26-同时开发数据请求-api-目录-git-冲突目录方案\">#</a> 26. 同时开发，数据请求 api 目录 git 冲突目录方案</h3>\n<ul>\n<li>在 api 目录下新建一个目录，目录对应一级 tab, 这个目录内放置一个 index.js ，最后把二级 tab 组件所使用的 api 请求都在这个 index.js 内引入。</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 目前</span><br><span class=\"line\"></span><br><span class=\"line\">|- api</span><br><span class=\"line\">  |- pageA.ts</span><br><span class=\"line\">  |- pageB.ts</span><br><span class=\"line\"></span><br><span class=\"line\">// 建议</span><br><span class=\"line\"></span><br><span class=\"line\">|- api</span><br><span class=\"line\">  |- pageA</span><br><span class=\"line\">    |- index.js</span><br><span class=\"line\">    |- aaa.js</span><br><span class=\"line\">    |- bbb.js</span><br><span class=\"line\">  |- pageB</span><br><span class=\"line\">    |- index.js</span><br><span class=\"line\">    |- aaa.js</span><br><span class=\"line\">    |- bbb.js</span><br><span class=\"line\">    |- ccc.js</span><br></pre></td></tr></table></figure>\n<h3 id=\"27-组件嵌套过深\"><a class=\"markdownIt-Anchor\" href=\"#27-组件嵌套过深\">#</a> 27. 组件嵌套过深</h3>\n<ul>\n<li>组件一般不要超过三层，最多四层，层级过深可能会导致数据传递过深，在做一些颗粒度比较细的操作的时候，处理起来较为繁琐，可以使用 redux 等状态管理工具替代。</li>\n</ul>\n<h3 id=\"28-代码过滤掉你没考虑到的情况\"><a class=\"markdownIt-Anchor\" href=\"#28-代码过滤掉你没考虑到的情况\">#</a> 28. 代码过滤掉你没考虑到的情况</h3>\n<ul>\n<li>例如一个函数，你只想操作字符串，那你必须在函数开头就只允许参数是字符串</li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> parse (str:string)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (typeof(str) === <span class=\"string\">&#x27;string&#x27;</span> ) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"29-业务代码里面的异步请求需要-try-catch\"><a class=\"markdownIt-Anchor\" href=\"#29-业务代码里面的异步请求需要-try-catch\">#</a> 29. 业务代码里面的异步请求需要 try catch</h3>\n<ul>\n<li>ajax 请求，使用 try catch，错误提示后端返回，并且做一些失败后的状态操作例如进入列表页，我们需要一个 loading 状态，然后去请求数据，可是失败之后，也需要把 loading 状态去掉，把 loading 隐藏的代码就写在 finally 里面。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">getStudentList = <span class=\"keyword\">async</span> () =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">loading</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">isEmpty</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> <span class=\"title function_\">getStudentList</span>(&#123;&#125;);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">catch</span> (e) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// TODO</span></span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(e);</span><br><span class=\"line\">  &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//  失败之后的一些兜底操作</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">loading</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">      <span class=\"attr\">isEmpty</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"30-setstate-有三种用法\"><a class=\"markdownIt-Anchor\" href=\"#30-setstate-有三种用法\">#</a> 30. setState 有三种用法</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 对象</span><br><span class=\"line\">this.setState(&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">// 函数，一般是用于在setState之前做一些操作</span><br><span class=\"line\">this.setState(</span><br><span class=\"line\">  () =&gt; &#123;</span><br><span class=\"line\">    // TODO</span><br><span class=\"line\">    console.log(<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">return</span> &#123;</span><br><span class=\"line\">      a:300</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">// 第二个参数，一般是用于在setState之后做一些操作</span><br><span class=\"line\">this.setState(&#123;</span><br><span class=\"line\">  a:300</span><br><span class=\"line\">&#125;, () =&gt; &#123;</span><br><span class=\"line\">  // TODO</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"31-setstate-可能是同步的\"><a class=\"markdownIt-Anchor\" href=\"#31-setstate-可能是同步的\">#</a> 31. setState 可能是同步的</h3>\n<ul>\n<li>setState 在 react 里的合成事件和钩子函数中是 “异步” 的。</li>\n<li>setState 在原生事件和 setTimeout 中是同步的。</li>\n</ul>\n<h3 id=\"32-不要在-setstate-前面加-await\"><a class=\"markdownIt-Anchor\" href=\"#32-不要在-setstate-前面加-await\">#</a> 32. 不要在 setState 前面加 await</h3>\n<ul>\n<li>setState 前面也是可以带 await 的，会变成同步设置状态，但这是一种巧合，不确定未来哪个版本就不支持了，为了遵循 react 框架的设计原则，我们使用回掉函数的形式。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\">func = <span class=\"keyword\">async</span> (name, value, status) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(&#123;</span><br><span class=\"line\">    name,</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"comment\">// TODO</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\">func = <span class=\"function\">(<span class=\"params\">name, value, status</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      name,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"comment\">// TODO</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"33-阻止事件默认行为\"><a class=\"markdownIt-Anchor\" href=\"#33-阻止事件默认行为\">#</a> 33. 阻止事件默认行为</h3>\n<ul>\n<li>在 React 中你不能通过返回 false 来阻止默认行为。必须明确调用 preventDefault 。</li>\n</ul>\n<h3 id=\"34-在-componentwillunmount-里面去除副作用的函数\"><a class=\"markdownIt-Anchor\" href=\"#34-在-componentwillunmount-里面去除副作用的函数\">#</a> 34. 在 componentWillUnmount 里面去除副作用的函数</h3>\n<ul>\n<li>清除 EventListener</li>\n<li>中止数据请求</li>\n<li>清除定时器</li>\n</ul>\n<h3 id=\"35-key\"><a class=\"markdownIt-Anchor\" href=\"#35-key\">#</a> 35. key</h3>\n<ul>\n<li>对于组件中的 key 优化，起到最大化重用 dom</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">dataAry</span>.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">item, index</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;index&#125;</span> /&gt;</span></span>;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//good</span></span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"property\">state</span>.<span class=\"property\">dataAry</span>.<span class=\"title function_\">map</span>(<span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span> <span class=\"attr\">key</span>=<span class=\"string\">&#123;item.id&#125;</span> /&gt;</span></span>);</span><br></pre></td></tr></table></figure>\n<h3 id=\"36-for-in-中一定要有-hasownproperty-的判断即禁止直接读取原型对象的属性\"><a class=\"markdownIt-Anchor\" href=\"#36-for-in-中一定要有-hasownproperty-的判断即禁止直接读取原型对象的属性\">#</a> 36. for-in 中一定要有 hasOwnProperty 的判断（即禁止直接读取原型对象的属性）</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//bad</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">const</span> key = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">  arr.<span class=\"title function_\">push</span>(obj[key]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//good</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> arr = [];</span><br><span class=\"line\"><span class=\"keyword\">const</span> key = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> (key <span class=\"keyword\">in</span> obj) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (obj.<span class=\"title function_\">hasOwnProperty</span>(key)) &#123;</span><br><span class=\"line\">    arr.<span class=\"title function_\">push</span>(obj[key]);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"37-第三方库函数的使用\"><a class=\"markdownIt-Anchor\" href=\"#37-第三方库函数的使用\">#</a> 37. 第三方库函数的使用</h3>\n<ul>\n<li>用 try catch 包裹，防止第三方库的出现错误，导致整个程序崩溃</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"> * Echart 用于代绘制图表，但当其自身发生错误时，可能影响到业务代码的执行</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> iniDom = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;init-container&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> echartObj = echarts.<span class=\"title function_\">init</span>(iniDom);</span><br><span class=\"line\"><span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    echartObj,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> &#123; echartObj &#125; = <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 更新图表</span></span><br><span class=\"line\">    echartObj.<span class=\"title function_\">setOption</span>(<span class=\"variable constant_\">CHART_CONFIG</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> iniDom = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;init-container&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> echartObj = echarts.<span class=\"title function_\">init</span>(iniDom);</span><br><span class=\"line\">  <span class=\"variable language_\">this</span>.<span class=\"title function_\">setState</span>(</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      echartObj,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; echartObj &#125; = <span class=\"variable language_\">this</span>.<span class=\"property\">state</span>;</span><br><span class=\"line\">      <span class=\"comment\">// 更新图表</span></span><br><span class=\"line\">      echartObj.<span class=\"title function_\">setOption</span>(<span class=\"variable constant_\">CHART_CONFIG</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// TODO</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"38-防止-xss-攻击\"><a class=\"markdownIt-Anchor\" href=\"#38-防止-xss-攻击\">#</a> 38. 防止 xss 攻击</h3>\n<ul>\n<li>input，textarea 等标签，不要直接把 html 文本直接渲染在页面上，使用 xssb 等过滤之后再输出到标签上；</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; html2text &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;xss&#x27;</span>;</span><br><span class=\"line\"><span class=\"title function_\">render</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">  <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">div</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  <span class=\"attr\">dangerouslySetInnerHTML</span>=<span class=\"string\">&#123;&#123;</span></span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">    <span class=\"attr\">__html:</span> <span class=\"attr\">html2text</span>(<span class=\"attr\">htmlContent</span>)</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">  &#125;&#125;</span></span></span><br><span class=\"line\"><span class=\"tag\"><span class=\"language-xml\">/&gt;</span></span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"39-在组件中获取真实-dom\"><a class=\"markdownIt-Anchor\" href=\"#39-在组件中获取真实-dom\">#</a> 39. 在组件中获取真实 dom</h3>\n<ul>\n<li>使用 16 版本后的 createRef () 函数</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">MyComponent</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">React.Component</span>&lt;iProps, iState&gt; &#123;</span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">props</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">super</span>(props);</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">inputRef</span> = <span class=\"title class_\">React</span>.<span class=\"title function_\">createRef</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">ref</span>=<span class=\"string\">&#123;this.inputRef&#125;</span> /&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">componentDidMount</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">inputRef</span>.<span class=\"property\">current</span>.<span class=\"title function_\">focus</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"40-减少魔法数字\"><a class=\"markdownIt-Anchor\" href=\"#40-减少魔法数字\">#</a> 40. 减少魔法数字</h3>\n<ul>\n<li>写代码的时候尽量减少一些未知含义的数字，尽量用英文单词。例如 type === 0 的时候做了一些操作，让人不知所以然。</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (type !== <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// TODO</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"attr\">STATUS</span>: <span class=\"title class_\">Record</span>&lt;string, any&gt; = &#123;</span><br><span class=\"line\">  <span class=\"attr\">READY</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  <span class=\"attr\">FETCHING</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"attr\">FAILED</span>: <span class=\"number\">2</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (type === <span class=\"variable constant_\">STATUS</span>.<span class=\"property\">READY</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// TODO</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// best</span></span><br><span class=\"line\">enum <span class=\"variable constant_\">STATUS</span> &#123;</span><br><span class=\"line\">  <span class=\"comment\">// 就绪</span></span><br><span class=\"line\">  <span class=\"variable constant_\">READY</span> = <span class=\"number\">0</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 请求中</span></span><br><span class=\"line\">  <span class=\"variable constant_\">FETCHING</span> = <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"comment\">// 请求失败</span></span><br><span class=\"line\">  <span class=\"variable constant_\">FAILED</span> = <span class=\"number\">2</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"41-如果需要优化-react-性能一般用不到\"><a class=\"markdownIt-Anchor\" href=\"#41-如果需要优化-react-性能一般用不到\">#</a> 41. 如果需要优化 react 性能（一般用不到）</h3>\n<ul>\n<li>如果组件的 state 和 props 都是简单类型，可以继承 PureComponent 而不是 Component</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Component</span>, <span class=\"title class_\">PureComponent</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">// bad</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Message</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">Component</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;this.state.message&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// good</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Message</span> <span class=\"keyword\">extends</span> <span class=\"title class_ inherited__\">PureComponent</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">render</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>&#123;this.state.message&#125;<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>重写 shouldComponentUpdate 方法，在 shouldComponentUpdate 里面根据 state,props 是否有改变来判断是否需要重新渲染。如果组件继承了 PureComponent 就没必要再重写 shouldComponentUpdate 方法</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; isReactPropsEqual, isReactStateEqual &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;@fe/common/lib/equal&#x27;</span>;</span><br><span class=\"line\"><span class=\"title function_\">shouldComponentUpdate</span>(<span class=\"params\">nextProps:IProps, nextState:IState</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_\">isReactStateEqual</span>(nextState,<span class=\"variable language_\">this</span>.<span class=\"property\">state</span>) &amp;&amp; <span class=\"title function_\">isReactPropsEqual</span>(nextProps,<span class=\"variable language_\">this</span>.<span class=\"property\">props</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"42-event-事件对象类型\"><a class=\"markdownIt-Anchor\" href=\"#42-event-事件对象类型\">#</a> 42. Event 事件对象类型</h3>\n<p>很多小伙伴用了很久的 ts, 都不知道常用 Event 事件对象类型：</p>\n<p>ClipboardEvent&lt;T = Element&gt; 剪贴板事件对象</p>\n<p>DragEvent&lt;T = Element&gt; 拖拽事件对象</p>\n<p>ChangeEvent&lt;T = Element&gt; Change 事件对象</p>\n<p>KeyboardEvent&lt;T = Element&gt; 键盘事件对象</p>\n<p>MouseEvent&lt;T = Element&gt; 鼠标事件对象</p>\n<p>TouchEvent&lt;T = Element&gt; 触摸事件对象</p>\n<p>WheelEvent&lt;T = Element&gt; 滚轮事件对象</p>\n<p>AnimationEvent&lt;T = Element&gt; 动画事件对象</p>\n<p>TransitionEvent&lt;T = Element&gt; 过渡事件对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">MouseEvent</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&quot;react&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">interface <span class=\"title class_\">IProps</span> &#123;</span><br><span class=\"line\">  <span class=\"title function_\">onClick</span>(<span class=\"attr\">event</span>: <span class=\"title class_\">MouseEvent</span>&lt;<span class=\"title class_\">HTMLDivElement</span>&gt;): <span class=\"keyword\">void</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"43-使用私有属性取代-state-状态\"><a class=\"markdownIt-Anchor\" href=\"#43-使用私有属性取代-state-状态\">#</a> 43. 使用私有属性取代 state 状态</h3>\n<p>对于一些不需要控制 ui 的状态属性，我们可以直接绑到 this 上， 即私有属性，没有必要弄到 this.state 上，不然会触发渲染机制，造成性能浪费 例如请求翻页数据的时候，我们都会有个变量。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// bad</span><br><span class=\"line\">state: IState = &#123;</span><br><span class=\"line\">  pageNo:1,</span><br><span class=\"line\">  pageSize:10</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">// good</span><br><span class=\"line\">queryParams:Record&lt;string,any&gt; = &#123;</span><br><span class=\"line\">  pageNo:1,</span><br><span class=\"line\">  pageSize:10</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"44-代码细粒度的思考\"><a class=\"markdownIt-Anchor\" href=\"#44-代码细粒度的思考\">#</a> 44. 代码细粒度的思考</h3>\n<p>总结四句话。我们在写组件或者函数的的时候，工具函数和业务逻辑抽离，表单校验和业务抽离、事件函数和业务抽离，ajax 和业务抽离。 例如有些页面是通过 location.href 跳转的，我们有些业务逻辑等都是放到 didmountMount, 但是后期改需求，可能要用 react-router 进行跳转，可能要改的逻辑就会很多了，所以函数抽离出来，需求更新就少改一点代码。 如果还不确定如何划分函数的细粒度，我有个建议。使用过两次以上的代码，要抽离组件或者函数，两次的可以不用</p>\n<h3 id=\"45-if-else-等判断太多了后期难以维护\"><a class=\"markdownIt-Anchor\" href=\"#45-if-else-等判断太多了后期难以维护\">#</a> 45. if else 等判断太多了，后期难以维护。</h3>\n<p>个人觉得 if else 嵌套深看起来也不会太难受，难受的是，项目迭代久之后，自己都忘记曾经写过这些代码，而且类型多或者不确定有什么类型，是否后期还会加的情况下，改起来就非常复杂了，而且很容易踩坑和背锅。 用配置取代 if 嵌套，大概就是抽离一个 config.ts 出来，里面放一些配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">例如你的业务代码里面，会根据不同url参数，代码会执行不同的逻辑.</span><br><span class=\"line\">/info?<span class=\"built_in\">type</span>=wechat&amp;uid=123456&amp;</span><br><span class=\"line\">const qsObj = qs(window.location.url)</span><br><span class=\"line\">const urlType = qsObj.<span class=\"built_in\">type</span></span><br><span class=\"line\">// bad</span><br><span class=\"line\"><span class=\"keyword\">if</span> (urlType === <span class=\"string\">&#x27;wechat&#x27;</span>) &#123;</span><br><span class=\"line\">    doSomeThing()</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"function\"><span class=\"title\">if</span></span> () &#123;</span><br><span class=\"line\">    doSomeThing()</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"function\"><span class=\"title\">if</span></span> () &#123;</span><br><span class=\"line\">    doSomeThing()</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> <span class=\"function\"><span class=\"title\">if</span></span> () &#123;</span><br><span class=\"line\">    doSomeThing()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// good</span><br><span class=\"line\">config.t</span><br><span class=\"line\">const urlTypeConfig: Record&lt;string, typeItem&gt; = &#123;</span><br><span class=\"line\">  <span class=\"string\">&#x27;wechat&#x27;</span>: &#123; // key 就是对应的<span class=\"built_in\">type</span></span><br><span class=\"line\">    name: <span class=\"string\">&#x27;wechat&#x27;</span>,</span><br><span class=\"line\">    show: [<span class=\"string\">&#x27;header&#x27;</span>, <span class=\"string\">&#x27;footer&#x27;</span>, <span class=\"string\">&#x27;wechat&#x27;</span>] // 展示什么，可能是异步的</span><br><span class=\"line\">    pession: [<span class=\"string\">&#x27;admin&#x27;</span>], // 权限是什么，可能是异步的</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&#x27;zhifubao&#x27;</span>: &#123; // key 就是对应的<span class=\"built_in\">type</span></span><br><span class=\"line\">    name: <span class=\"string\">&#x27;zhifubao&#x27;</span>,</span><br><span class=\"line\">    show: [<span class=\"string\">&#x27;header&#x27;</span>, <span class=\"string\">&#x27;footer&#x27;</span>, <span class=\"string\">&#x27;zhifubao&#x27;</span>] // 展示什么，可能是异步的</span><br><span class=\"line\">    pession: [<span class=\"string\">&#x27;admin&#x27;</span>], // 权限是什么，可能是异步的</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// 业务逻辑</span><br><span class=\"line\">const qsObj = qs(window.location.url)</span><br><span class=\"line\">const urlType = qsObj.<span class=\"built_in\">type</span></span><br><span class=\"line\">Object.keys(urlTypeConfig).forEach(item =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(urlType === item.type) &#123;</span><br><span class=\"line\">    doSomeThing(item.show)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h3 id=\"46-不要使用-renderxxx要使用函数式组件\"><a class=\"markdownIt-Anchor\" href=\"#46-不要使用-renderxxx要使用函数式组件\">#</a> 46. 不要使用 renderXXX, 要使用函数式组件</h3>\n<p>发现团队一些小伙伴为了减少 render 函数里面的代码量，会把一些元素拆分到函数里面。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// bad</span><br><span class=\"line\">  renderHeader = () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> (&lt;div /&gt;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  renderBody = () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> (&lt;div /&gt;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  renderFooter = () =&gt; &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> (&lt;div /&gt;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">render</span></span>()&#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span>(</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        renderHeader()</span><br><span class=\"line\">        renderBody()</span><br><span class=\"line\">        renderFooter()</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<p>更好的办法，是用函数式组件取代在当前组件里面写方法</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// good</span><br><span class=\"line\"> <span class=\"keyword\">function</span> RenderHeader(props) =  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> (&lt;div /&gt;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> <span class=\"keyword\">function</span> RenderBody(props) =  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> (&lt;div /&gt;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"> <span class=\"keyword\">function</span> RenderFooter(props) =  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span> (&lt;div /&gt;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">class Component extends React.Component&lt;iProps, iState&gt;&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"title\">render</span></span> () &#123;</span><br><span class=\"line\">    <span class=\"built_in\">return</span>(</span><br><span class=\"line\">      &lt;div&gt;</span><br><span class=\"line\">        &lt;RenderHeader /&gt;</span><br><span class=\"line\">        &lt;RenderBody /&gt;</span><br><span class=\"line\">        &lt;RenderFooter /&gt;</span><br><span class=\"line\">      &lt;/div&gt;</span><br><span class=\"line\">    )</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"47-a-标签安全问题\"><a class=\"markdownIt-Anchor\" href=\"#47-a-标签安全问题\">#</a> 47. a 标签安全问题</h3>\n<p>使用 a 标签打开一个新窗口过程中的安全问题。新页面中可以使用 window.opener 来控制原始页面。如果新老页面同域，那么在新页面中可以任意操作原始页面。如果是不同域，新页面中依然可以通过 window.opener.location，访问到原始页面的 location 对象</p>\n<p>在带有 target=&quot;_blank&quot; 的 a 标签中，加上 rel=&quot;noopener&quot; 属性。如果使用 window.open 的方式打开页面，将 opener 对象置为空。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var newWindow = window.open();</span><br><span class=\"line\">newWindow.opener = null;</span><br></pre></td></tr></table></figure>\n<h3 id=\"48-void-0-替代-undefined\"><a class=\"markdownIt-Anchor\" href=\"#48-void-0-替代-undefined\">#</a> 48. void 0 替代 undefined</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clearSessioin = () =&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  req.session.userName = undefined;</span><br><span class=\"line\"></span><br><span class=\"line\">  req.session.userName = void 0</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"49-前端不要操作-cookie\"><a class=\"markdownIt-Anchor\" href=\"#49-前端不要操作-cookie\">#</a> 49. 前端不要操作 cookie</h3>\n<p>在做一些前后端鉴权的时候，后端应该开启 domain,secure,httponly 严格模式，禁止前端操作 cookie，防止 csrf 攻击。</p>\n<h3 id=\"50-代码检查插件\"><a class=\"markdownIt-Anchor\" href=\"#50-代码检查插件\">#</a> 50. 代码检查插件</h3>\n<p>我们可以使用构建工具继承 husky eslint tslint lint-stage prettier 来规范代码。</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZXNsaW50LWNvbmZpZy1wcmV0dGllcg==\">eslint-config-prettier</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZXNsaW50LXBsdWdpbi1wcmV0dGllcg==\">eslint-plugin-prettier</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvZXNsaW50LXBsdWdpbi1yZWFjdA==\">eslint-plugin-react</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvdHNsaW50LXJlYWN0\">tslint-react</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvdHNsaW50LXBsdWdpbi1wcmV0dGllcg==\">tslint-plugin-prettier</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubnBtanMuY29tL3BhY2thZ2UvdHNsaW50LWNvbmZpZy1wcmV0dGllcg==\">tslint-config-prettier</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0ZhaXRocmVlL3dlYi1idWlsZC10b29sLWRlbW8vdHJlZS9tYXN0ZXIvMjgtd29ya2Zsb3c=\">团队开发工作流</span></li>\n</ul>\n<h3 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\">#</a> 参考</h3>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FpcmJuYi9qYXZhc2NyaXB0L3RyZWUvbWFzdGVyL3JlYWN0I2FsaWdubWVudA==\">airbnb</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL2ltd2ViLmdpdGh1Yi5pby9Db2RlR3VpZGUv\">imweb 代码规范</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC82ODQ0OTAzNTAyNjExNzU5MTE3I2hlYWRpbmctNQ==\">如何无痛降低 if else 面条代码复杂度</span></li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9qdWVqaW4uaW0vcG9zdC82ODQ0OTAzNjM2NzQ5Nzc4OTU4I2hlYWRpbmctNQ==\">你真的理解 setState 吗？</span></li>\n</ul>\n",
            "tags": [
                "前端"
            ]
        },
        {
            "id": "https://18859421790.github.io/2023/09/21/2023%E5%B9%B49%E6%9C%8821%E6%97%A5/",
            "url": "https://18859421790.github.io/2023/09/21/2023%E5%B9%B49%E6%9C%8821%E6%97%A5/",
            "title": "一言",
            "date_published": "2023-09-21T14:53:43.000Z",
            "content_html": "<ul>\n<li>杨绛先生曾经写道：</li>\n</ul>\n<blockquote>\n<p>无论什么关系，情分被消耗殆尽缘分便走到了终点。把错归咎于自己，并且礼貌的退场。把自己还给自己，把别人还给别人。让花成花，让树成树，从此山水一程，不相逢，愿来生，不见，不欠，不念。</p>\n</blockquote>\n<ul>\n<li>村上春树</li>\n</ul>\n<blockquote>\n<p>我动了离开你的念头，不是因为你不好，也不是因为不爱了，只是你对我的态度，让我觉得你的世界并不缺我，其实我可以厚着脸皮在纠缠你，但没有任何意义。<br>\n因为和你在一起时，我的状态不好，会激发我的脆弱焦躁善妒不安，会不断吸引出我人格里最不好的一面，与其和你在一起互相消耗，不如就算了吧。<br>\n内心期待的东西一点一点在落空，慢慢就不想要了，重复的话也不想说了。对不起的事多了，也无所谓了。当我发现你一点都不理解我的委屈时，我一句话都不想说了，百般委屈涌上心头，话到嘴边不值一提。不会拆穿你，但是会远离会不动声色，淘汰你，我只做选择，从不教育。<br>\n你有你的立场，我有我的底线，迷失自我去爱别人挺没意思的。慢热，重感情不爱解释，总是心软，吃了很多亏，还是会相信别人，我也永远没长记性，但是我选择离开。我不想纠结在没有意义的事情上了，伸手要的糖和你主动给的，是两个味道。我常常深思熟虑，考虑这份关系还要不要继续，反复问自己，其实我一点也不后悔遇见你，但是我们终究还是没有翻过那座山。<br>\n我在很平常的一天放弃了一个很重要的人，虽然有点舍不得但我满心欢喜也该告一段落了。</p>\n</blockquote>\n<ul>\n<li>马德在《允许自己虚度时光》里写道：</li>\n</ul>\n<blockquote>\n<p>我慢慢明白了我为什么不快乐，因为我总是期待一个结果。<br>\n看一本书期待它让我变深刻，吃饭游泳期待它让我一斤斤瘦下来，发一条短信期待它被回复，对别人好期待被回待以好，写一个故事说一个心情期待它被关注被安慰，参加一个活动期待换来充实丰富的经历。<br>\n这些预设的期待如果实现了，长舒一口气。如果没实现呢？自怨自艾。可是小时候也是同一个我，用一个下午的时间看蚂蚁搬家，等石头开花，小时候不期待结果，小时候哭笑都不打折。</p>\n</blockquote>\n<ul>\n<li>莫言在《晚熟的人》里这样写道：</li>\n</ul>\n<blockquote>\n<p>年轻的时候爱上什么都不为过，成熟的时候放弃什么都不为错。每个人终其一生都在寻找那个与自己灵魂相近的人，每个人终其一生都在寻找那个与自己灵魂相近的人。<br>\n到后来才发现唯一契合的只有自己本性善良的人都比较晚熟，并且被劣人催熟，后来虽然开窍了，但仍然善良与赤诚，不断寻找同类，最后变成一个孤独的人。</p>\n</blockquote>\n<blockquote>\n<p>总有一天你会明白：任何关系到最后只是相识一场，大家也都是阶段性的陪伴，那些你放不下的人和事到最后岁月都会替你去轻描淡写。<br>\n这个世界上从来没有感同身受，你可以消沉也可以抱怨甚至可以崩溃，但定要懂得自愈，好起来的从来不是生活而是你自己，当你的内心足够坚定的时候，谁都没有办法影响你的心。</p>\n</blockquote>\n<p>* 邱妙津《鳄鱼手记》里的这句话让我醒悟：</p>\n<blockquote>\n<p>我一直记得很久以前你对我说的一句话，你说：“健康的人才有资格谈恋爱，把爱情拿来治病只会病得更严重。”<br>\n 我的成绩普普通通，数学不及格，物理一窍不通，没有当过别人家的小孩；我学了几年乐器画过几年画，既没天赋也没兴趣，后来通通都放弃；我不漂亮还很胖，没有大长腿没有马甲线，每次减肥瘦几斤，又会迅速反弹；我挤过早晚高峰的地铁，艰难地呼吸脚着不了地；我谈了几场恋爱，有时是被丢下，有时是先离开。<br>\n我没有开挂的人生，可依然觉得自己还不错。我念了很多年书，也去到一些地方，我看过波澜壮阔的星空，吃过尤其美味的火锅；我的父母理解我，我的朋友照顾我，我有一些渺小的心愿，也在偷偷为它们努力着。<br>\n我是张三是李四，是芸芸众生中最平凡的那一个。我经常被生活锤得心灰意冷，可我从来都没放弃过。</p>\n</blockquote>\n<ul>\n<li>当你老了，回顾一生，就会发觉：</li>\n</ul>\n<blockquote>\n<p>什么时候出国读书、什么时候决定做第一份职业、何时选定了对象而恋爱、什么时候结婚，其实都是命运的巨变。<br>\n只是当时站在三岔路口，眼见风云干樯，你作出抉择的那一日，在日记上，相当沉闷和平凡，当时还以为是生命中普通的一天。</p>\n</blockquote>\n<ul>\n<li>看到廖一梅在《像我这样笨拙地生活》里说到：</li>\n</ul>\n<blockquote>\n<p>我经常有这种感觉，如果这个事情来了，你却没有勇敢地去解决掉，它一定会再来。生活真是这样，它会一次次地让你去做这个工作直到你学会为止。</p>\n</blockquote>\n<ul>\n<li>内藤君和西瓜酱的这句话好治愈：</li>\n</ul>\n<blockquote>\n<p>如果你现在所处的圈子，让你疲惫不堪，越来越不开心，那换个圈子吧。如果换来换去你发现你讨厌与人相处，也没关系，去和高山，去和大海，去和动物，去和浩瀚宇宙相处吧。<br>\n面对这些庞大的未知，很多郁结变得不值一提，人如此渺小，人生如此短暂，和使自己开心的一切相处吧。</p>\n</blockquote>\n<ul>\n<li>K 卡 527 说：</li>\n</ul>\n<blockquote>\n<p>我人生前二十多年吃亏就吃在太懂事了，这是我做人最大的败笔。这个懂事，是懂别人的事，理解别人的苦处，容易被别人打动，甚至在自我和别人发生冲突时，顺从别人的意志，为别人牺牲自己的利益。<br>\n然而，我没有为自己做点什么，我也不懂自己。这种烂德行其实比杀盗淫妄更恶心。它直接毁坏了我的命运。</p>\n</blockquote>\n<ul>\n<li>梵高写给弟弟提奥的信里说：</li>\n</ul>\n<blockquote>\n<p>每个人的心里都有一团火，路过的人只看到烟，但是总有一个人能看到这团火，然后走过来陪我一起。而我在人群中看到了他的火，我快步走过去，生怕慢一点他就会被淹没在岁月的尘埃里。</p>\n</blockquote>\n<ul>\n<li>杨绛先生说过：</li>\n</ul>\n<blockquote>\n<p>你喜欢吃草莓，你会毫不犹豫的买下它，如果你不喜欢吃香蕉，但考虑到香蕉助消化，你还是会买它。所以，喜欢是单纯的，不喜欢，才会权衡利弊，在你犹豫的一瞬间，其实已经做出了选择。<br>\n何为对的人？一见你，就笑的人；一见，你就笑的人。</p>\n</blockquote>\n<ul>\n<li>意外看到《流金岁月》这段话，突然好像对生活的好多遗憾都释怀了。</li>\n</ul>\n<blockquote>\n<p>你一辈子遇到的、欣赏的、谈得来的、喜欢的那么多人，不是每一个都可以在一起谈恋爱做夫妻的，有的做了朋友，有的做了同事，有的过很多年才能见一面。因缘不一样，关系就不一样，享受就好了。</p>\n</blockquote>\n<ul>\n<li>《魔女宅急便》里有一句台词：“在这个世界上别太依赖任何人，因为当你在黑暗中挣扎时，连你的影子都会离开你。” 女孩子一旦有了依赖感，就像幼儿园放学等人来接的小朋友。过度依赖任何人都是在自杀，你还有什么不明白的。</li>\n</ul>\n<blockquote>\n<p>别人的屋檐大，都不如自己有把伞。平庸的人用热闹填补空虚，优秀的人用独处成就自己。希望我们都能减少依赖，降低期待；保持热爱，奔赴山海。</p>\n</blockquote>\n<blockquote>\n<p>马克鲍尔莱恩说：一个人成熟的标志之一，就是明白每天发生在自己身上 99% 的事情，于别人而言根本毫无意义。</p>\n</blockquote>\n<blockquote>\n<p>很长一段时间内我都不大接受自己，总希望眼睛更大一点鼻子更挺一点嘴更翘一些脸更小一点皮肤更白一点身材更瘦一点当然身高也要再更高一点。<br>\n所以我每一年的生日愿望都是新的一岁能多接受自己一些，而不是只执着于争取表面虚张声势的美丽。</p>\n</blockquote>\n<blockquote>\n<p>我们真的太着急了，我们多么想要一个结果。但是我们追求的目的根本就不纯粹，我们根本就没有享受这件事情。<br>\n我觉得追龙卷风的一个乐趣就是：可能我们没有追到风，但是在风的背后，我们可以看到这些美丽的景色。所以，不要只关注龙卷风，而是要享受整个过程。</p>\n</blockquote>\n<blockquote>\n<p>你太急切的想要一个答案了。想要风光的学位，瞬间的博学，想要意气风发，想闪着金光走向喜欢的人。<br>\n但现实告诉我，操之过急便会败北，他要我等，要我耐得住不断延长的时间线，要我交付出足够的努力堆砌在沉闷、晦涩的时光里，才肯将一切 “我想要” 一点一点递送至我手里。</p>\n</blockquote>\n<blockquote>\n<p>你只是一个普通人，你身边的人大多也都限难辛苦。夜里痛哭都还好说，悄悄爬上楼顶又悄悄下来的也不是没有。<br>\n你得记着别人和你一样脆弱，这样你就不吝惜脸面随时都可献出一个安慰的拥抱。你也得记得你和别人一样坚强，没困住别人的泥沼深渊同样也困不住你。</p>\n</blockquote>\n<ul>\n<li>在《像我这样的人》里有一段话：</li>\n</ul>\n<blockquote>\n<p>有时候孤独是好事，一个人就自己多长本事，多看世界，多走些路，把时间花在正事上，变成自己打心底喜欢的那种人。</p>\n</blockquote>\n<ul>\n<li>《请回答 19880》里有段台词是这样的：</li>\n</ul>\n<blockquote>\n<p>从来不是让你把一次考试当成人生成败的赌注，只是想让你在足够年轻的时候体会一次全力以<br>\n赴。</p>\n</blockquote>\n<blockquote>\n<p>你要克服懒惰，你要克服游手好闲，你要克服漫长的白日梦，你要克服一就而就的安想，你要克服自以为是浅薄的幽默感。<br>\n你要独立生长在这世上，不寻找不依靠，因为冷漠寡情的人孤独一生。你要坚强，振作，自立，不能软弱，逃避，害怕。不要沉溺在消极负面得情绪里，要正面阳光得对待生活和爱你的人。</p>\n</blockquote>\n<blockquote>\n<p>你所有的压力，都是因为你太想要了。你所有的痛苦，都是因为你太较真了。有些事不能尽你心意，就是提醒你该转弯了。</p>\n</blockquote>\n<blockquote>\n<p>经历越多越明白，善良有度付出有底线，不在烂人烂事上纠缠，不消耗自己也绝不会委屈求全，但凡让我累点的关系我都不会去维持，一是没必要二是没时间，思想不在一个高度就没必要互相说服。<br>\n别去焦虑，鼓励自己过好今天就好，这世间有太多的猝不及防，有些东西也根本不配占有你的情绪，人生匆匆，一定要过好自己。</p>\n</blockquote>\n<blockquote>\n<p>很多时候，生命最不能承受的是太重的爱，没有什么事情是绝对的单纯的，每个人都是要各取所需的，表达的最好的，最多的，未必最深情。</p>\n</blockquote>\n<blockquote>\n<p>后来，我决定不再纠结一些事情。那些曾经日思夜想的人，和始终都没有答案的问题，突然就释怀了。非常喜欢这样一段话：我用执着烧死了所有的幼稚和任性，那片荒野慢慢长出了理智，冷漠和清醒。</p>\n</blockquote>\n<blockquote>\n<p>一直用傅首尔的这段话告诫自己：这世上没什么是本来就应该属于你的，所以，失去时稍微难过一下就好。其实人生就是个不断得到与失去的过程，有些遗憾总是难免的。<br>\n某个阶段的失去，或许是为了下一次得到的更好，我们也总要试着拥抱新的生活。</p>\n</blockquote>\n<blockquote>\n<p>我渐渐把 “这种事为什么要发生在我身上” 的想法，替换成了 “这种事想教会我什么”，然后发<br>\n现身边的一切都改变了。</p>\n</blockquote>\n<blockquote>\n<p>有心栽花花不开，无心插柳柳成荫。生活有时候很有意思，你越是用力证明，越感觉疲惫。越是对一件事的结果产生执念，他就越反着来。<br>\n太过用力，本身就是一种消耗，反而适得其反，用温柔的力量，反而能厚积薄发，就像发条上的太紧容易断，该放松时放松，该努力时努力，张驰有度才刚刚好。</p>\n</blockquote>\n<blockquote>\n<p>不骄不躁，抚平心态，才能看到更好的阳光。不要一味地追求太紧绷的用力，人生最坏的结果不过是大器晚成。</p>\n</blockquote>\n",
            "tags": [
                "一言"
            ]
        },
        {
            "id": "https://18859421790.github.io/2023/09/02/%E8%A7%86%E9%A2%91%E6%B5%81/",
            "url": "https://18859421790.github.io/2023/09/02/%E8%A7%86%E9%A2%91%E6%B5%81/",
            "title": "web前端播放flv流的支持h265",
            "date_published": "2023-09-02T11:58:24.255Z",
            "content_html": "<h1 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>公司需要前端支持播放 h265 的视频流，因为公司之前使用的基本是 flv 的 h264 的视频流，所以特意去搜索了下 h264 和 h265 区别</p>\n<h2 id=\"h264和h265对比\"><a class=\"markdownIt-Anchor\" href=\"#h264和h265对比\">#</a> h264 和 h265 对比</h2>\n<h3 id=\"压缩效率\"><a class=\"markdownIt-Anchor\" href=\"#压缩效率\">#</a> 压缩效率：</h3>\n<p>H.265 比 H.264 具有更高的压缩效率，可以将相同质量的视频压缩为更小的文件大小。这意味着在相同比特率下，H.265 可以提供更好的视频质量，或者在相同质量下减少带宽占用。</p>\n<h3 id=\"视频质量\"><a class=\"markdownIt-Anchor\" href=\"#视频质量\">#</a> 视频质量：</h3>\n<p>H.265 通常提供更好的视频质量，尤其是在低比特率情况下。这意味着它可以更好地保留细节和减少视频噪声。</p>\n<h3 id=\"分辨率支持\"><a class=\"markdownIt-Anchor\" href=\"#分辨率支持\">#</a> 分辨率支持：</h3>\n<p>H.265 对于高分辨率视频的编码和解码更加高效。它更适合处理 4K 和 8K 视频。</p>\n<h3 id=\"带宽要求\"><a class=\"markdownIt-Anchor\" href=\"#带宽要求\">#</a> 带宽要求：</h3>\n<p>H.265 可以降低带宽需求，这对于在线视频流媒体和带宽受限的环境非常有用。</p>\n<h3 id=\"存储需求\"><a class=\"markdownIt-Anchor\" href=\"#存储需求\">#</a> 存储需求：</h3>\n<p>由于更高的压缩效率，H.265 编码的视频文件相对更小，可以节省存储空间。</p>\n<h3 id=\"计算资源\"><a class=\"markdownIt-Anchor\" href=\"#计算资源\">#</a> 计算资源：</h3>\n<p>H.265 编码和解码通常需要更多的计算资源，因为它是一种更复杂的编码标准。这可能需要更高性能的硬件支持。</p>\n<h3 id=\"广泛的支持\"><a class=\"markdownIt-Anchor\" href=\"#广泛的支持\">#</a> 广泛的支持：</h3>\n<p>H.264 是一个非常成熟的标准，几乎所有现代设备和软件都支持它。相比之下，H.265 的支持可能不如 H.264 广泛，尤其是在较旧的设备上。</p>\n<h3 id=\"未来趋势\"><a class=\"markdownIt-Anchor\" href=\"#未来趋势\">#</a> 未来趋势：</h3>\n<p>H.265 被认为是未来的视频编码标准，因为它提供了更好的性能和质量。越来越多的新设备和流媒体服务已经开始采用 H.265。</p>\n<div class=\"note info\">\n<p>综上，感觉 h265 就是除了支持度不高，基本全方面碾压 h264，但是 flv 由于历史原因一直不支持 h265，所以只能另外找插件使前端能播放 h264 视频</p>\n</div>\n<h2 id=\"扩展-flv-标准支持-h265\"><a class=\"markdownIt-Anchor\" href=\"#扩展-flv-标准支持-h265\">#</a> 扩展 FLV 标准支持 H265</h2>\n<ul>\n<li>目前国内 CDN 厂商扩展的 CodecID 一般都为 12，具体的 FLV H265 标准信息，可以参考 金山的 video_file_format_spec_v10_1 <a href='https://github.com/ksvc/FFmpeg/wiki'>这里</a></li>\n<li>FFmpeg patch 方法可以参考：金山云 H.265 patch 说明 <a href='https://github.com/ksvc/FFmpeg/wiki/instructions'>这里</a></li>\n</ul>\n<h2 id=\"wxinlineplayer\"><a class=\"markdownIt-Anchor\" href=\"#wxinlineplayer\">#</a> WXInlinePlayer</h2>\n<p>此插件可以使 flv 支持 h265 播放，同时支持 h264 播放。<br>\ngithub 地址 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvZmZlMTg5MS9XWElubGluZVBsYXllcg==\">这里</span> <br>\n进过测试，可以使用，但是播放视频前需要提前知道视频流是 h265 还是 h264。\\</p>\n<p>为了解决这个问题，在项目中加上以下代码解决</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">onerror</span> = <span class=\"keyword\">function</span> <span class=\"title function_\">trace</span>(<span class=\"params\">msg, url, line</span>)&#123;</span><br><span class=\"line\">      <span class=\"comment\">//msg 错误信息 url错误地址  line错误行数</span></span><br><span class=\"line\">      <span class=\"comment\">// 统一使用h265解码，如果报以下错误就销毁播放器，使用h264解码</span></span><br><span class=\"line\">      <span class=\"comment\">// 原本是264解码，使用265解码会报错</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> errmsg = <span class=\"string\">&#x27;Assertion failed: offset + 2 &lt;= this-&gt;_length, at: /Users/yang.zhao/Documents/work/WXInlinePlayer/lib/codec/src/stream/buffer.cpp,243,read_uint16_be&#x27;</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(msg.<span class=\"title function_\">includes</span>(errmsg))&#123;</span><br><span class=\"line\">          <span class=\"comment\">// 销毁播放器，使用h265解码</span></span><br><span class=\"line\">        $(<span class=\"string\">&quot;iH265&quot;</span>).<span class=\"property\">checked</span> = !$(<span class=\"string\">&quot;iH265&quot;</span>).<span class=\"property\">checked</span></span><br><span class=\"line\">        <span class=\"title function_\">initPlayer</span>(<span class=\"title function_\">getOptions</span>());</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"videojs-flvh265\"><a class=\"markdownIt-Anchor\" href=\"#videojs-flvh265\">#</a> videoJS-FLVH265</h2>\n<p>github 地址    <a href='https://github.com/coffe1891/videojs-flvh265'>这里</a></p>\n<p>和 WXInlinePlayer 一样，解码器来自 WXInlinePlayer</p>\n<h2 id=\"h265webjs\"><a class=\"markdownIt-Anchor\" href=\"#h265webjs\">#</a> h265web.js</h2>\n<p>gitee 地址 <a href='https://gitee.com/hu60t/h265web.js/'>这里</a> <br>\n一个可支持 HEVC/H.265 编码播放 360P、480P、540P、720P、1080P 的 HEVC 播放器 <br>\n代码中每个版本会有一个 token，作用未知 <br>\n可以同时播放 h265 和！h254 视频</p>\n<h2 id=\"综上\"><a class=\"markdownIt-Anchor\" href=\"#综上\">#</a> 综上</h2>\n<p>作为直播流，前端除了拿到直播流的链接还需要像后端发送请求让摄像头向链接方向推流， <br>\nflv 会一直向链接出拿流资源，m3u8 则会向后端拿请求头，后端生成 m3u8 头文件太慢时前端会出现 404 报错，此时应该延迟请求或者等待</p>\n",
            "tags": []
        },
        {
            "id": "https://18859421790.github.io/2023/09/01/%E5%89%8D%E8%A8%80/",
            "url": "https://18859421790.github.io/2023/09/01/%E5%89%8D%E8%A8%80/",
            "title": "博客前言",
            "date_published": "2023-09-01T14:53:43.000Z",
            "content_html": "<h1 id=\"欢迎来到我的生活的一角\"><a class=\"markdownIt-Anchor\" href=\"#欢迎来到我的生活的一角\">#</a> 欢迎来到我的生活的一角</h1>\n<p>    生活，是一本厚重的书，每一天都是其中的一页。而我，就是这本书的作者。我热爱记录生活中的点滴，无论是令人心动的瞬间、技术的突破，还是那些平凡而珍贵的瞬间。</p>\n<p>    这个博客，是我的生活舞台，也是我的技术实验室。这里，我会与你分享我的生活故事，有趣的经历和发现，以及我在技术领域的探索。无论是一次激动人心的冒险，还是一次编程的突破，我都将在这里留下我的印记。</p>\n<p>    有时生活是美丽的，有时它是充满挑战的，但每一刻都值得被记录和分享。在这个数字时代，我们有幸能够用文字、图片和代码来捕捉生活的点点滴滴，留下一份珍贵的回忆，也与世界分享自己的独特视角。</p>\n<p>    我相信，每个人的生活都充满了独特的故事，每个人都可以通过分享来连接和启发他人。这个博客不仅仅是我个人的记录，更是与你共同探索生活和技术的舞台。我希望通过这个平台与你建立深刻的联系，一起分享快乐、激情和见解。</p>\n<p>    无论你是偶然发现这里，还是经常来访，我都非常感激你的支持和陪伴。在这里，我们将一起探索未知的领域，记录人生的精彩瞬间，并共同创造有意义的数字足迹。</p>\n<p>    让我们一起踏上这个充满探索和分享的旅程吧！我期待着与你一起留下更多精彩的故事和技术成果，共同创造属于我们的记忆。</p>\n<p>    不论你是来自世界的哪个角落，感谢你的到来，欢迎来到我的博客！</p>\n",
            "tags": [
                "随笔"
            ]
        },
        {
            "id": "https://18859421790.github.io/2023/09/01/%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1/",
            "url": "https://18859421790.github.io/2023/09/01/%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1/",
            "title": "为移动和桌面设备优化你的网站",
            "date_published": "2023-09-01T14:53:43.000Z",
            "content_html": "<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>在当今数字时代，网站访问的设备种类多种多样，从桌面电脑到智能手机和平板电脑。作为前端开发者，你需要确保你的网站在不同的设备上都能够提供出色的用户体验。这就是响应式设计的重要性所在。</p>\n<h2 id=\"什么是响应式设计\"><a class=\"markdownIt-Anchor\" href=\"#什么是响应式设计\">#</a> 什么是响应式设计</h2>\n<p>响应式设计是一种网页设计方法，旨在使网站能够适应各种不同大小和分辨率的设备。它使用 CSS 媒体查询和弹性网格布局等技术，以确保网站的布局和内容在不同屏幕上都能够自动调整和优化。</p>\n<h2 id=\"为什么响应式设计如此重要\"><a class=\"markdownIt-Anchor\" href=\"#为什么响应式设计如此重要\">#</a> 为什么响应式设计如此重要</h2>\n<ul>\n<li>\n<p>用户体验：响应式设计提供了一致的用户体验，无论用户是使用大屏幕桌面电脑还是小屏幕智能手机。</p>\n</li>\n<li>\n<p>SEO 优化：谷歌和其他搜索引擎喜欢响应式设计，因为它使他们更容易索引和排名网站。这有助于提高你的网站在搜索结果中的可见性。</p>\n</li>\n<li>\n<p>维护简便：与维护多个单独的网站版本相比，响应式设计可以减少开发和维护的工作量，因为你只需管理一个网站。</p>\n</li>\n</ul>\n<h2 id=\"实施响应式设计的关键步骤\"><a class=\"markdownIt-Anchor\" href=\"#实施响应式设计的关键步骤\">#</a> 实施响应式设计的关键步骤</h2>\n<ul>\n<li>使用媒体查询</li>\n</ul>\n<p>媒体查询是 CSS 中的一种技术，允许你根据设备属性（如屏幕宽度）应用不同的 CSS 规则。这使得你可以为不同的设备定义不同的样式，从而创建响应式布局。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@media (max-width: 768px) &#x27;&#123;&#x27;</span><br><span class=\"line\">    /* 在小屏幕上应用的样式 */</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@media (min-width: 769px) &#123;</span><br><span class=\"line\">    /* 在大屏幕上应用的样式 */</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>使用弹性网格布局</p>\n<p>弹性网格布局是一种灵活的布局技术，使你可以轻松创建适应不同屏幕大小的网格结构。它可以帮助你创建多列布局，同时确保内容适应屏幕。</p>\n</li>\n</ul>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.container &#123;</span><br><span class=\"line\">    display: flex;</span><br><span class=\"line\">    flex-wrap: wrap;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">.item &#123;</span><br><span class=\"line\">    flex: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>图像优化</p>\n<p>在响应式设计中，图像的大小和分辨率应根据设备进行优化，以减少加载时间和带宽消耗。你可以使用<img>元素的 srcset 属性来提供不同分辨率的图像。</p>\n</li>\n</ul>\n<figure class=\"highlight coffeescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;img src=<span class=\"string\">&quot;image.jpg&quot;</span> alt=<span class=\"string\">&quot;响应式图像&quot;</span> srcset=<span class=\"string\">&quot;image-small.jpg 320w, image-medium.jpg 768w, image-large.jpg 1024w&quot;</span>&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"结语\"><a class=\"markdownIt-Anchor\" href=\"#结语\">#</a> 结语</h2>\n<p>响应式设计是现代前端开发的不可或缺的一部分，它有助于提供一致的用户体验，提高搜索引擎可见性，减少维护工作，同时满足不同设备用户的需求。在今天的数字时代，掌握响应式设计技术对于前端开发者来说至关重要。开始使用媒体查询、弹性网格布局和图像优化，使你的网站在各种设备上都能够闪耀。</p>\n<p>希望这篇文章有助于你理解和实施响应式设计。如果你有任何问题或想进一步了解响应式设计，请随时在评论中留言。感谢阅读！</p>\n",
            "tags": [
                "前端"
            ]
        }
    ]
}