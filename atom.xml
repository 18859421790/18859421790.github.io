<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://18859421790.github.io</id>
    <title>xu·live</title>
    <link href="https://18859421790.github.io" />
    <updated>2023-09-02T11:58:24.255Z</updated>
    <category term="随笔" />
    <category term="前端" />
    <entry>
        <id>https://18859421790.github.io/2023/09/02/%E8%A7%86%E9%A2%91%E6%B5%81/</id>
        <title>web前端播放flv流的支持h265</title>
        <link rel="alternate" href="https://18859421790.github.io/2023/09/02/%E8%A7%86%E9%A2%91%E6%B5%81/"/>
        <content type="html">&lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;p&gt;公司需要前端支持播放 h265 的视频流，因为公司之前使用的基本是 flv 的 h264 的视频流，所以特意去搜索了下 h264 和 h265 区别&lt;/p&gt;
&lt;h2 id=&#34;h264和h265对比&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#h264和h265对比&#34;&gt;#&lt;/a&gt; h264 和 h265 对比&lt;/h2&gt;
&lt;h3 id=&#34;压缩效率&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#压缩效率&#34;&gt;#&lt;/a&gt; 压缩效率：&lt;/h3&gt;
&lt;p&gt;H.265 比 H.264 具有更高的压缩效率，可以将相同质量的视频压缩为更小的文件大小。这意味着在相同比特率下，H.265 可以提供更好的视频质量，或者在相同质量下减少带宽占用。&lt;/p&gt;
&lt;h3 id=&#34;视频质量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#视频质量&#34;&gt;#&lt;/a&gt; 视频质量：&lt;/h3&gt;
&lt;p&gt;H.265 通常提供更好的视频质量，尤其是在低比特率情况下。这意味着它可以更好地保留细节和减少视频噪声。&lt;/p&gt;
&lt;h3 id=&#34;分辨率支持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分辨率支持&#34;&gt;#&lt;/a&gt; 分辨率支持：&lt;/h3&gt;
&lt;p&gt;H.265 对于高分辨率视频的编码和解码更加高效。它更适合处理 4K 和 8K 视频。&lt;/p&gt;
&lt;h3 id=&#34;带宽要求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#带宽要求&#34;&gt;#&lt;/a&gt; 带宽要求：&lt;/h3&gt;
&lt;p&gt;H.265 可以降低带宽需求，这对于在线视频流媒体和带宽受限的环境非常有用。&lt;/p&gt;
&lt;h3 id=&#34;存储需求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#存储需求&#34;&gt;#&lt;/a&gt; 存储需求：&lt;/h3&gt;
&lt;p&gt;由于更高的压缩效率，H.265 编码的视频文件相对更小，可以节省存储空间。&lt;/p&gt;
&lt;h3 id=&#34;计算资源&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#计算资源&#34;&gt;#&lt;/a&gt; 计算资源：&lt;/h3&gt;
&lt;p&gt;H.265 编码和解码通常需要更多的计算资源，因为它是一种更复杂的编码标准。这可能需要更高性能的硬件支持。&lt;/p&gt;
&lt;h3 id=&#34;广泛的支持&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#广泛的支持&#34;&gt;#&lt;/a&gt; 广泛的支持：&lt;/h3&gt;
&lt;p&gt;H.264 是一个非常成熟的标准，几乎所有现代设备和软件都支持它。相比之下，H.265 的支持可能不如 H.264 广泛，尤其是在较旧的设备上。&lt;/p&gt;
&lt;h3 id=&#34;未来趋势&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#未来趋势&#34;&gt;#&lt;/a&gt; 未来趋势：&lt;/h3&gt;
&lt;p&gt;H.265 被认为是未来的视频编码标准，因为它提供了更好的性能和质量。越来越多的新设备和流媒体服务已经开始采用 H.265。&lt;/p&gt;
&lt;div class=&#34;note info&#34;&gt;
&lt;p&gt;综上，感觉 h265 就是除了支持度不高，基本全方面碾压 h264，但是 flv 由于历史原因一直不支持 h265，所以只能另外找插件使前端能播放 h264 视频&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id=&#34;扩展-flv-标准支持-h265&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#扩展-flv-标准支持-h265&#34;&gt;#&lt;/a&gt; 扩展 FLV 标准支持 H265&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;目前国内 CDN 厂商扩展的 CodecID 一般都为 12，具体的 FLV H265 标准信息，可以参考 金山的 video_file_format_spec_v10_1 &lt;a href=&#39;https://github.com/ksvc/FFmpeg/wiki&#39;&gt;这里&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;FFmpeg patch 方法可以参考：金山云 H.265 patch 说明 &lt;a href=&#39;https://github.com/ksvc/FFmpeg/wiki/instructions&#39;&gt;这里&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;wxinlineplayer&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#wxinlineplayer&#34;&gt;#&lt;/a&gt; WXInlinePlayer&lt;/h2&gt;
&lt;p&gt;此插件可以使 flv 支持 h265 播放，同时支持 h264 播放。&lt;br&gt;
github 地址 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2NvZmZlMTg5MS9XWElubGluZVBsYXllcg==&#34;&gt;这里&lt;/span&gt; &lt;br&gt;
进过测试，可以使用，但是播放视频前需要提前知道视频流是 h265 还是 h264。\&lt;/p&gt;
&lt;p&gt;为了解决这个问题，在项目中加上以下代码解决&lt;/p&gt;
&lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;onerror&lt;/span&gt; = &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;trace&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;msg, url, line&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;//msg 错误信息 url错误地址  line错误行数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 统一使用h265解码，如果报以下错误就销毁播放器，使用h264解码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 原本是264解码，使用265解码会报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; errmsg = &lt;span class=&#34;string&#34;&gt;&amp;#x27;Assertion failed: offset + 2 &amp;lt;= this-&amp;gt;_length, at: /Users/yang.zhao/Documents/work/WXInlinePlayer/lib/codec/src/stream/buffer.cpp,243,read_uint16_be&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(msg.&lt;span class=&#34;title function_&#34;&gt;includes&lt;/span&gt;(errmsg))&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;comment&#34;&gt;// 销毁播放器，使用h265解码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        $(&lt;span class=&#34;string&#34;&gt;&amp;quot;iH265&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;checked&lt;/span&gt; = !$(&lt;span class=&#34;string&#34;&gt;&amp;quot;iH265&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;checked&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;initPlayer&lt;/span&gt;(&lt;span class=&#34;title function_&#34;&gt;getOptions&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;videojs-flvh265&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#videojs-flvh265&#34;&gt;#&lt;/a&gt; videoJS-FLVH265&lt;/h2&gt;
&lt;p&gt;github 地址    &lt;a href=&#39;https://github.com/coffe1891/videojs-flvh265&#39;&gt;这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;和 WXInlinePlayer 一样，解码器来自 WXInlinePlayer&lt;/p&gt;
&lt;h2 id=&#34;h265webjs&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#h265webjs&#34;&gt;#&lt;/a&gt; h265web.js&lt;/h2&gt;
&lt;p&gt;gitee 地址 &lt;a href=&#39;https://gitee.com/hu60t/h265web.js/&#39;&gt;这里&lt;/a&gt; &lt;br&gt;
一个可支持 HEVC/H.265 编码播放 360P、480P、540P、720P、1080P 的 HEVC 播放器 &lt;br&gt;
代码中每个版本会有一个 token，作用未知 &lt;br&gt;
可以同时播放 h265 和！h254 视频&lt;/p&gt;
&lt;h2 id=&#34;综上&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#综上&#34;&gt;#&lt;/a&gt; 综上&lt;/h2&gt;
&lt;p&gt;作为直播流，前端除了拿到直播流的链接还需要像后端发送请求让摄像头向链接方向推流， &lt;br&gt;
flv 会一直向链接出拿流资源，m3u8 则会向后端拿请求头，后端生成 m3u8 头文件太慢时前端会出现 404 报错，此时应该延迟请求或者等待&lt;/p&gt;
</content>
        <updated>2023-09-02T11:58:24.255Z</updated>
    </entry>
    <entry>
        <id>https://18859421790.github.io/2023/09/01/%E5%89%8D%E8%A8%80/</id>
        <title>博客前言</title>
        <link rel="alternate" href="https://18859421790.github.io/2023/09/01/%E5%89%8D%E8%A8%80/"/>
        <content type="html">&lt;h1 id=&#34;欢迎来到我的生活的一角&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#欢迎来到我的生活的一角&#34;&gt;#&lt;/a&gt; 欢迎来到我的生活的一角&lt;/h1&gt;
&lt;p&gt;    生活，是一本厚重的书，每一天都是其中的一页。而我，就是这本书的作者。我热爱记录生活中的点滴，无论是令人心动的瞬间、技术的突破，还是那些平凡而珍贵的瞬间。&lt;/p&gt;
&lt;p&gt;    这个博客，是我的生活舞台，也是我的技术实验室。这里，我会与你分享我的生活故事，有趣的经历和发现，以及我在技术领域的探索。无论是一次激动人心的冒险，还是一次编程的突破，我都将在这里留下我的印记。&lt;/p&gt;
&lt;p&gt;    有时生活是美丽的，有时它是充满挑战的，但每一刻都值得被记录和分享。在这个数字时代，我们有幸能够用文字、图片和代码来捕捉生活的点点滴滴，留下一份珍贵的回忆，也与世界分享自己的独特视角。&lt;/p&gt;
&lt;p&gt;    我相信，每个人的生活都充满了独特的故事，每个人都可以通过分享来连接和启发他人。这个博客不仅仅是我个人的记录，更是与你共同探索生活和技术的舞台。我希望通过这个平台与你建立深刻的联系，一起分享快乐、激情和见解。&lt;/p&gt;
&lt;p&gt;    无论你是偶然发现这里，还是经常来访，我都非常感激你的支持和陪伴。在这里，我们将一起探索未知的领域，记录人生的精彩瞬间，并共同创造有意义的数字足迹。&lt;/p&gt;
&lt;p&gt;    让我们一起踏上这个充满探索和分享的旅程吧！我期待着与你一起留下更多精彩的故事和技术成果，共同创造属于我们的记忆。&lt;/p&gt;
&lt;p&gt;    不论你是来自世界的哪个角落，感谢你的到来，欢迎来到我的博客！&lt;/p&gt;
</content>
        <category term="随笔" />
        <updated>2023-09-01T14:53:43.000Z</updated>
    </entry>
    <entry>
        <id>https://18859421790.github.io/2023/09/01/%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1/</id>
        <title>为移动和桌面设备优化你的网站</title>
        <link rel="alternate" href="https://18859421790.github.io/2023/09/01/%E5%93%8D%E5%BA%94%E5%BC%8F%E8%AE%BE%E8%AE%A1/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;在当今数字时代，网站访问的设备种类多种多样，从桌面电脑到智能手机和平板电脑。作为前端开发者，你需要确保你的网站在不同的设备上都能够提供出色的用户体验。这就是响应式设计的重要性所在。&lt;/p&gt;
&lt;h2 id=&#34;什么是响应式设计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#什么是响应式设计&#34;&gt;#&lt;/a&gt; 什么是响应式设计&lt;/h2&gt;
&lt;p&gt;响应式设计是一种网页设计方法，旨在使网站能够适应各种不同大小和分辨率的设备。它使用 CSS 媒体查询和弹性网格布局等技术，以确保网站的布局和内容在不同屏幕上都能够自动调整和优化。&lt;/p&gt;
&lt;h2 id=&#34;为什么响应式设计如此重要&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#为什么响应式设计如此重要&#34;&gt;#&lt;/a&gt; 为什么响应式设计如此重要&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;用户体验：响应式设计提供了一致的用户体验，无论用户是使用大屏幕桌面电脑还是小屏幕智能手机。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;SEO 优化：谷歌和其他搜索引擎喜欢响应式设计，因为它使他们更容易索引和排名网站。这有助于提高你的网站在搜索结果中的可见性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;维护简便：与维护多个单独的网站版本相比，响应式设计可以减少开发和维护的工作量，因为你只需管理一个网站。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;实施响应式设计的关键步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实施响应式设计的关键步骤&#34;&gt;#&lt;/a&gt; 实施响应式设计的关键步骤&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;使用媒体查询&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;媒体查询是 CSS 中的一种技术，允许你根据设备属性（如屏幕宽度）应用不同的 CSS 规则。这使得你可以为不同的设备定义不同的样式，从而创建响应式布局。&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;@media (max-width: 768px) &amp;#x27;&amp;#123;&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /* 在小屏幕上应用的样式 */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;@media (min-width: 769px) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    /* 在大屏幕上应用的样式 */&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用弹性网格布局&lt;/p&gt;
&lt;p&gt;弹性网格布局是一种灵活的布局技术，使你可以轻松创建适应不同屏幕大小的网格结构。它可以帮助你创建多列布局，同时确保内容适应屏幕。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight coffeescript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;.container &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    display: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flex-wrap: wrap;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;.item &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    flex: &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;图像优化&lt;/p&gt;
&lt;p&gt;在响应式设计中，图像的大小和分辨率应根据设备进行优化，以减少加载时间和带宽消耗。你可以使用&lt;img&gt;元素的 srcset 属性来提供不同分辨率的图像。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight coffeescript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;img src=&lt;span class=&#34;string&#34;&gt;&amp;quot;image.jpg&amp;quot;&lt;/span&gt; alt=&lt;span class=&#34;string&#34;&gt;&amp;quot;响应式图像&amp;quot;&lt;/span&gt; srcset=&lt;span class=&#34;string&#34;&gt;&amp;quot;image-small.jpg 320w, image-medium.jpg 768w, image-large.jpg 1024w&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&#34;结语&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结语&#34;&gt;#&lt;/a&gt; 结语&lt;/h2&gt;
&lt;p&gt;响应式设计是现代前端开发的不可或缺的一部分，它有助于提供一致的用户体验，提高搜索引擎可见性，减少维护工作，同时满足不同设备用户的需求。在今天的数字时代，掌握响应式设计技术对于前端开发者来说至关重要。开始使用媒体查询、弹性网格布局和图像优化，使你的网站在各种设备上都能够闪耀。&lt;/p&gt;
&lt;p&gt;希望这篇文章有助于你理解和实施响应式设计。如果你有任何问题或想进一步了解响应式设计，请随时在评论中留言。感谢阅读！&lt;/p&gt;
</content>
        <category term="前端" />
        <updated>2023-09-01T14:53:43.000Z</updated>
    </entry>
</feed>
